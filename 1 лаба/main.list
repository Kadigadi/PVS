
main.elf:     file format elf32-littlearm


Disassembly of section .text:

08000188 <NMI_Handler>:
 8000188:	b480      	push	{r7}
 800018a:	af00      	add	r7, sp, #0
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000194:	4770      	bx	lr

08000196 <HardFault_Handler>:
 8000196:	b480      	push	{r7}
 8000198:	af00      	add	r7, sp, #0
 800019a:	e7fe      	b.n	800019a <HardFault_Handler+0x4>

0800019c <MemManage_Handler>:
 800019c:	b480      	push	{r7}
 800019e:	af00      	add	r7, sp, #0
 80001a0:	e7fe      	b.n	80001a0 <MemManage_Handler+0x4>

080001a2 <BusFault_Handler>:
 80001a2:	b480      	push	{r7}
 80001a4:	af00      	add	r7, sp, #0
 80001a6:	e7fe      	b.n	80001a6 <BusFault_Handler+0x4>

080001a8 <UsageFault_Handler>:
 80001a8:	b480      	push	{r7}
 80001aa:	af00      	add	r7, sp, #0
 80001ac:	e7fe      	b.n	80001ac <UsageFault_Handler+0x4>

080001ae <SVC_Handler>:
 80001ae:	b480      	push	{r7}
 80001b0:	af00      	add	r7, sp, #0
 80001b2:	bf00      	nop
 80001b4:	46bd      	mov	sp, r7
 80001b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ba:	4770      	bx	lr

080001bc <DebugMon_Handler>:
 80001bc:	b480      	push	{r7}
 80001be:	af00      	add	r7, sp, #0
 80001c0:	bf00      	nop
 80001c2:	46bd      	mov	sp, r7
 80001c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001c8:	4770      	bx	lr

080001ca <PendSV_Handler>:
 80001ca:	b480      	push	{r7}
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	bf00      	nop
 80001d0:	46bd      	mov	sp, r7
 80001d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001d6:	4770      	bx	lr

080001d8 <SysTick_Handler>:
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0
 80001dc:	bf00      	nop
 80001de:	46bd      	mov	sp, r7
 80001e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001e4:	4770      	bx	lr
	...

080001e8 <SystemInit>:
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
 80001ec:	4a16      	ldr	r2, [pc, #88]	; (8000248 <SystemInit+0x60>)
 80001ee:	4b16      	ldr	r3, [pc, #88]	; (8000248 <SystemInit+0x60>)
 80001f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80001f4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80001f8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80001fc:	4a13      	ldr	r2, [pc, #76]	; (800024c <SystemInit+0x64>)
 80001fe:	4b13      	ldr	r3, [pc, #76]	; (800024c <SystemInit+0x64>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f043 0301 	orr.w	r3, r3, #1
 8000206:	6013      	str	r3, [r2, #0]
 8000208:	4b10      	ldr	r3, [pc, #64]	; (800024c <SystemInit+0x64>)
 800020a:	2200      	movs	r2, #0
 800020c:	609a      	str	r2, [r3, #8]
 800020e:	4a0f      	ldr	r2, [pc, #60]	; (800024c <SystemInit+0x64>)
 8000210:	4b0e      	ldr	r3, [pc, #56]	; (800024c <SystemInit+0x64>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000218:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800021c:	6013      	str	r3, [r2, #0]
 800021e:	4b0b      	ldr	r3, [pc, #44]	; (800024c <SystemInit+0x64>)
 8000220:	4a0b      	ldr	r2, [pc, #44]	; (8000250 <SystemInit+0x68>)
 8000222:	605a      	str	r2, [r3, #4]
 8000224:	4a09      	ldr	r2, [pc, #36]	; (800024c <SystemInit+0x64>)
 8000226:	4b09      	ldr	r3, [pc, #36]	; (800024c <SystemInit+0x64>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800022e:	6013      	str	r3, [r2, #0]
 8000230:	4b06      	ldr	r3, [pc, #24]	; (800024c <SystemInit+0x64>)
 8000232:	2200      	movs	r2, #0
 8000234:	60da      	str	r2, [r3, #12]
 8000236:	f000 f80d 	bl	8000254 <SetSysClock>
 800023a:	4b03      	ldr	r3, [pc, #12]	; (8000248 <SystemInit+0x60>)
 800023c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000240:	609a      	str	r2, [r3, #8]
 8000242:	bf00      	nop
 8000244:	bd80      	pop	{r7, pc}
 8000246:	bf00      	nop
 8000248:	e000ed00 	.word	0xe000ed00
 800024c:	40023800 	.word	0x40023800
 8000250:	24003010 	.word	0x24003010

08000254 <SetSysClock>:
 8000254:	b480      	push	{r7}
 8000256:	b083      	sub	sp, #12
 8000258:	af00      	add	r7, sp, #0
 800025a:	2300      	movs	r3, #0
 800025c:	607b      	str	r3, [r7, #4]
 800025e:	2300      	movs	r3, #0
 8000260:	603b      	str	r3, [r7, #0]
 8000262:	4a36      	ldr	r2, [pc, #216]	; (800033c <SetSysClock+0xe8>)
 8000264:	4b35      	ldr	r3, [pc, #212]	; (800033c <SetSysClock+0xe8>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800026c:	6013      	str	r3, [r2, #0]
 800026e:	4b33      	ldr	r3, [pc, #204]	; (800033c <SetSysClock+0xe8>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000276:	603b      	str	r3, [r7, #0]
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	3301      	adds	r3, #1
 800027c:	607b      	str	r3, [r7, #4]
 800027e:	683b      	ldr	r3, [r7, #0]
 8000280:	2b00      	cmp	r3, #0
 8000282:	d103      	bne.n	800028c <SetSysClock+0x38>
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	f5b3 4fa0 	cmp.w	r3, #20480	; 0x5000
 800028a:	d1f0      	bne.n	800026e <SetSysClock+0x1a>
 800028c:	4b2b      	ldr	r3, [pc, #172]	; (800033c <SetSysClock+0xe8>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000294:	2b00      	cmp	r3, #0
 8000296:	d002      	beq.n	800029e <SetSysClock+0x4a>
 8000298:	2301      	movs	r3, #1
 800029a:	603b      	str	r3, [r7, #0]
 800029c:	e001      	b.n	80002a2 <SetSysClock+0x4e>
 800029e:	2300      	movs	r3, #0
 80002a0:	603b      	str	r3, [r7, #0]
 80002a2:	683b      	ldr	r3, [r7, #0]
 80002a4:	2b01      	cmp	r3, #1
 80002a6:	d142      	bne.n	800032e <SetSysClock+0xda>
 80002a8:	4a24      	ldr	r2, [pc, #144]	; (800033c <SetSysClock+0xe8>)
 80002aa:	4b24      	ldr	r3, [pc, #144]	; (800033c <SetSysClock+0xe8>)
 80002ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80002b2:	6413      	str	r3, [r2, #64]	; 0x40
 80002b4:	4a22      	ldr	r2, [pc, #136]	; (8000340 <SetSysClock+0xec>)
 80002b6:	4b22      	ldr	r3, [pc, #136]	; (8000340 <SetSysClock+0xec>)
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80002be:	6013      	str	r3, [r2, #0]
 80002c0:	4a1e      	ldr	r2, [pc, #120]	; (800033c <SetSysClock+0xe8>)
 80002c2:	4b1e      	ldr	r3, [pc, #120]	; (800033c <SetSysClock+0xe8>)
 80002c4:	689b      	ldr	r3, [r3, #8]
 80002c6:	6093      	str	r3, [r2, #8]
 80002c8:	4a1c      	ldr	r2, [pc, #112]	; (800033c <SetSysClock+0xe8>)
 80002ca:	4b1c      	ldr	r3, [pc, #112]	; (800033c <SetSysClock+0xe8>)
 80002cc:	689b      	ldr	r3, [r3, #8]
 80002ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80002d2:	6093      	str	r3, [r2, #8]
 80002d4:	4a19      	ldr	r2, [pc, #100]	; (800033c <SetSysClock+0xe8>)
 80002d6:	4b19      	ldr	r3, [pc, #100]	; (800033c <SetSysClock+0xe8>)
 80002d8:	689b      	ldr	r3, [r3, #8]
 80002da:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 80002de:	6093      	str	r3, [r2, #8]
 80002e0:	4b16      	ldr	r3, [pc, #88]	; (800033c <SetSysClock+0xe8>)
 80002e2:	4a18      	ldr	r2, [pc, #96]	; (8000344 <SetSysClock+0xf0>)
 80002e4:	605a      	str	r2, [r3, #4]
 80002e6:	4a15      	ldr	r2, [pc, #84]	; (800033c <SetSysClock+0xe8>)
 80002e8:	4b14      	ldr	r3, [pc, #80]	; (800033c <SetSysClock+0xe8>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002f0:	6013      	str	r3, [r2, #0]
 80002f2:	bf00      	nop
 80002f4:	4b11      	ldr	r3, [pc, #68]	; (800033c <SetSysClock+0xe8>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80002fc:	2b00      	cmp	r3, #0
 80002fe:	d0f9      	beq.n	80002f4 <SetSysClock+0xa0>
 8000300:	4b11      	ldr	r3, [pc, #68]	; (8000348 <SetSysClock+0xf4>)
 8000302:	f240 7205 	movw	r2, #1797	; 0x705
 8000306:	601a      	str	r2, [r3, #0]
 8000308:	4a0c      	ldr	r2, [pc, #48]	; (800033c <SetSysClock+0xe8>)
 800030a:	4b0c      	ldr	r3, [pc, #48]	; (800033c <SetSysClock+0xe8>)
 800030c:	689b      	ldr	r3, [r3, #8]
 800030e:	f023 0303 	bic.w	r3, r3, #3
 8000312:	6093      	str	r3, [r2, #8]
 8000314:	4a09      	ldr	r2, [pc, #36]	; (800033c <SetSysClock+0xe8>)
 8000316:	4b09      	ldr	r3, [pc, #36]	; (800033c <SetSysClock+0xe8>)
 8000318:	689b      	ldr	r3, [r3, #8]
 800031a:	f043 0302 	orr.w	r3, r3, #2
 800031e:	6093      	str	r3, [r2, #8]
 8000320:	bf00      	nop
 8000322:	4b06      	ldr	r3, [pc, #24]	; (800033c <SetSysClock+0xe8>)
 8000324:	689b      	ldr	r3, [r3, #8]
 8000326:	f003 030c 	and.w	r3, r3, #12
 800032a:	2b08      	cmp	r3, #8
 800032c:	d1f9      	bne.n	8000322 <SetSysClock+0xce>
 800032e:	bf00      	nop
 8000330:	370c      	adds	r7, #12
 8000332:	46bd      	mov	sp, r7
 8000334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000338:	4770      	bx	lr
 800033a:	bf00      	nop
 800033c:	40023800 	.word	0x40023800
 8000340:	40007000 	.word	0x40007000
 8000344:	07405419 	.word	0x07405419
 8000348:	40023c00 	.word	0x40023c00

0800034c <it_init>:
#include "main.h"

#define SWITCH_DELAY 500000

void it_init() 
{
 800034c:	b580      	push	{r7, lr}
 800034e:	b084      	sub	sp, #16
 8000350:	af00      	add	r7, sp, #0
    SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA,EXTI_PinSource0);
 8000352:	2100      	movs	r1, #0
 8000354:	2000      	movs	r0, #0
 8000356:	f000 fa79 	bl	800084c <SYSCFG_EXTILineConfig>
    EXTI_InitTypeDef exti;  // структура для настроки
    exti.EXTI_Line = EXTI_Line0;    /// кнопка на линии 0
 800035a:	2301      	movs	r3, #1
 800035c:	60bb      	str	r3, [r7, #8]
    exti.EXTI_Mode = EXTI_Mode_Interrupt;    // прерывание (а не событие)
 800035e:	2300      	movs	r3, #0
 8000360:	733b      	strb	r3, [r7, #12]
    exti.EXTI_Trigger = EXTI_Trigger_Rising;  // срабатываем по переднему фронту импульса
 8000362:	2308      	movs	r3, #8
 8000364:	737b      	strb	r3, [r7, #13]
    exti.EXTI_LineCmd = ENABLE;    /// вкл
 8000366:	2301      	movs	r3, #1
 8000368:	73bb      	strb	r3, [r7, #14]
 
    EXTI_Init(&exti);
 800036a:	f107 0308 	add.w	r3, r7, #8
 800036e:	4618      	mov	r0, r3
 8000370:	f000 f9b0 	bl	80006d4 <EXTI_Init>
 
    NVIC_InitTypeDef nvic;
    nvic.NVIC_IRQChannel = EXTI0_IRQn;  // указываем канал IRQ
 8000374:	2306      	movs	r3, #6
 8000376:	713b      	strb	r3, [r7, #4]
    nvic.NVIC_IRQChannelPreemptionPriority = 2;  // приоритет канала ( 0 (самый приоритетный) - 15)
 8000378:	2302      	movs	r3, #2
 800037a:	717b      	strb	r3, [r7, #5]
    nvic.NVIC_IRQChannelSubPriority = 2;  // приоритет подгруппы
 800037c:	2302      	movs	r3, #2
 800037e:	71bb      	strb	r3, [r7, #6]
    nvic.NVIC_IRQChannelCmd = ENABLE;
 8000380:	2301      	movs	r3, #1
 8000382:	71fb      	strb	r3, [r7, #7]
 
    NVIC_Init(&nvic);
 8000384:	1d3b      	adds	r3, r7, #4
 8000386:	4618      	mov	r0, r3
 8000388:	f000 f942 	bl	8000610 <NVIC_Init>
}
 800038c:	bf00      	nop
 800038e:	3710      	adds	r7, #16
 8000390:	46bd      	mov	sp, r7
 8000392:	bd80      	pop	{r7, pc}

08000394 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	af00      	add	r7, sp, #0
     /* нужно проверять состояние линии прерывания  */
    if (EXTI_GetITStatus(EXTI_Line0) != RESET){
 8000398:	2001      	movs	r0, #1
 800039a:	f000 fa0d 	bl	80007b8 <EXTI_GetITStatus>
 800039e:	4603      	mov	r3, r0
 80003a0:	2b00      	cmp	r3, #0
 80003a2:	d004      	beq.n	80003ae <EXTI0_IRQHandler+0x1a>
		button_handler();
 80003a4:	f000 f89e 	bl	80004e4 <button_handler>
        EXTI_ClearITPendingBit(EXTI_Line0);  // сбрасываем флаг прерывания
 80003a8:	2001      	movs	r0, #1
 80003aa:	f000 fa1f 	bl	80007ec <EXTI_ClearITPendingBit>
    }
}
 80003ae:	bf00      	nop
 80003b0:	bd80      	pop	{r7, pc}
 80003b2:	bf00      	nop

080003b4 <blink_next>:

int blink_next(int led)
{
 80003b4:	b480      	push	{r7}
 80003b6:	b085      	sub	sp, #20
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	6078      	str	r0, [r7, #4]
	int next_led;
	switch(led)
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	3b01      	subs	r3, #1
 80003c0:	2b03      	cmp	r3, #3
 80003c2:	d83a      	bhi.n	800043a <blink_next+0x86>
 80003c4:	a201      	add	r2, pc, #4	; (adr r2, 80003cc <blink_next+0x18>)
 80003c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003ca:	bf00      	nop
 80003cc:	080003dd 	.word	0x080003dd
 80003d0:	080003f5 	.word	0x080003f5
 80003d4:	0800040d 	.word	0x0800040d
 80003d8:	08000425 	.word	0x08000425
	{
		case 1: 
			GPIOD->BSRRH = 0xffff;
 80003dc:	4b1a      	ldr	r3, [pc, #104]	; (8000448 <blink_next+0x94>)
 80003de:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80003e2:	835a      	strh	r2, [r3, #26]
			LED1_GPIO_PORT->BSRRL = LED1_PIN;
 80003e4:	4b18      	ldr	r3, [pc, #96]	; (8000448 <blink_next+0x94>)
 80003e6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80003ea:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	3301      	adds	r3, #1
 80003f0:	60fb      	str	r3, [r7, #12]
			break;
 80003f2:	e022      	b.n	800043a <blink_next+0x86>
		case 2:
			GPIOD->BSRRH = 0xffff;
 80003f4:	4b14      	ldr	r3, [pc, #80]	; (8000448 <blink_next+0x94>)
 80003f6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80003fa:	835a      	strh	r2, [r3, #26]
			LED2_GPIO_PORT->BSRRL = LED2_PIN;
 80003fc:	4b12      	ldr	r3, [pc, #72]	; (8000448 <blink_next+0x94>)
 80003fe:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000402:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	3301      	adds	r3, #1
 8000408:	60fb      	str	r3, [r7, #12]
			break;
 800040a:	e016      	b.n	800043a <blink_next+0x86>
		case 3: 
			GPIOD->BSRRH = 0xffff;
 800040c:	4b0e      	ldr	r3, [pc, #56]	; (8000448 <blink_next+0x94>)
 800040e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000412:	835a      	strh	r2, [r3, #26]
			LED3_GPIO_PORT->BSRRL = LED3_PIN;
 8000414:	4b0c      	ldr	r3, [pc, #48]	; (8000448 <blink_next+0x94>)
 8000416:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800041a:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	3301      	adds	r3, #1
 8000420:	60fb      	str	r3, [r7, #12]
			break;
 8000422:	e00a      	b.n	800043a <blink_next+0x86>
		case 4: 
			GPIOD->BSRRH = 0xffff;
 8000424:	4b08      	ldr	r3, [pc, #32]	; (8000448 <blink_next+0x94>)
 8000426:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800042a:	835a      	strh	r2, [r3, #26]
			LED4_GPIO_PORT->BSRRL = LED4_PIN;
 800042c:	4b06      	ldr	r3, [pc, #24]	; (8000448 <blink_next+0x94>)
 800042e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000432:	831a      	strh	r2, [r3, #24]
			next_led = 1;
 8000434:	2301      	movs	r3, #1
 8000436:	60fb      	str	r3, [r7, #12]
			break;
 8000438:	bf00      	nop
	}
	return next_led;
 800043a:	68fb      	ldr	r3, [r7, #12]
}
 800043c:	4618      	mov	r0, r3
 800043e:	3714      	adds	r7, #20
 8000440:	46bd      	mov	sp, r7
 8000442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000446:	4770      	bx	lr
 8000448:	40020c00 	.word	0x40020c00

0800044c <blink_prev>:

int blink_prev(int led)
{
 800044c:	b480      	push	{r7}
 800044e:	b085      	sub	sp, #20
 8000450:	af00      	add	r7, sp, #0
 8000452:	6078      	str	r0, [r7, #4]
	int next_led;
	switch(led)
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	3b01      	subs	r3, #1
 8000458:	2b03      	cmp	r3, #3
 800045a:	d83a      	bhi.n	80004d2 <blink_prev+0x86>
 800045c:	a201      	add	r2, pc, #4	; (adr r2, 8000464 <blink_prev+0x18>)
 800045e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000462:	bf00      	nop
 8000464:	08000475 	.word	0x08000475
 8000468:	0800048b 	.word	0x0800048b
 800046c:	080004a3 	.word	0x080004a3
 8000470:	080004bb 	.word	0x080004bb
	{
		case 1: 
			GPIOD->BSRRH = 0xffff;
 8000474:	4b1a      	ldr	r3, [pc, #104]	; (80004e0 <blink_prev+0x94>)
 8000476:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800047a:	835a      	strh	r2, [r3, #26]
			LED1_GPIO_PORT->BSRRL = LED1_PIN;
 800047c:	4b18      	ldr	r3, [pc, #96]	; (80004e0 <blink_prev+0x94>)
 800047e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000482:	831a      	strh	r2, [r3, #24]
			next_led = 4;
 8000484:	2304      	movs	r3, #4
 8000486:	60fb      	str	r3, [r7, #12]
			break;
 8000488:	e023      	b.n	80004d2 <blink_prev+0x86>
		case 2:
			GPIOD->BSRRH = 0xffff;
 800048a:	4b15      	ldr	r3, [pc, #84]	; (80004e0 <blink_prev+0x94>)
 800048c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000490:	835a      	strh	r2, [r3, #26]
			LED2_GPIO_PORT->BSRRL = LED2_PIN;
 8000492:	4b13      	ldr	r3, [pc, #76]	; (80004e0 <blink_prev+0x94>)
 8000494:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000498:	831a      	strh	r2, [r3, #24]
			next_led = led - 1;
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	3b01      	subs	r3, #1
 800049e:	60fb      	str	r3, [r7, #12]
			break;
 80004a0:	e017      	b.n	80004d2 <blink_prev+0x86>
		case 3: 
			GPIOD->BSRRH = 0xffff;
 80004a2:	4b0f      	ldr	r3, [pc, #60]	; (80004e0 <blink_prev+0x94>)
 80004a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80004a8:	835a      	strh	r2, [r3, #26]
			LED3_GPIO_PORT->BSRRL = LED3_PIN;
 80004aa:	4b0d      	ldr	r3, [pc, #52]	; (80004e0 <blink_prev+0x94>)
 80004ac:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80004b0:	831a      	strh	r2, [r3, #24]
			next_led = led - 1;
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	3b01      	subs	r3, #1
 80004b6:	60fb      	str	r3, [r7, #12]
			break;
 80004b8:	e00b      	b.n	80004d2 <blink_prev+0x86>
		case 4: 
			GPIOD->BSRRH = 0xffff;
 80004ba:	4b09      	ldr	r3, [pc, #36]	; (80004e0 <blink_prev+0x94>)
 80004bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80004c0:	835a      	strh	r2, [r3, #26]
			LED4_GPIO_PORT->BSRRL = LED4_PIN;
 80004c2:	4b07      	ldr	r3, [pc, #28]	; (80004e0 <blink_prev+0x94>)
 80004c4:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80004c8:	831a      	strh	r2, [r3, #24]
			next_led = led - 1;
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	3b01      	subs	r3, #1
 80004ce:	60fb      	str	r3, [r7, #12]
			break;
 80004d0:	bf00      	nop
	}
	return next_led;
 80004d2:	68fb      	ldr	r3, [r7, #12]
}	
 80004d4:	4618      	mov	r0, r3
 80004d6:	3714      	adds	r7, #20
 80004d8:	46bd      	mov	sp, r7
 80004da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004de:	4770      	bx	lr
 80004e0:	40020c00 	.word	0x40020c00

080004e4 <button_handler>:

int g_button_state = 0;
void button_handler()
{
 80004e4:	b480      	push	{r7}
 80004e6:	b083      	sub	sp, #12
 80004e8:	af00      	add	r7, sp, #0
	int i;
	
	for (i=0; i < SWITCH_DELAY/100; i++)
 80004ea:	2300      	movs	r3, #0
 80004ec:	607b      	str	r3, [r7, #4]
 80004ee:	e002      	b.n	80004f6 <button_handler+0x12>
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	3301      	adds	r3, #1
 80004f4:	607b      	str	r3, [r7, #4]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	f241 3287 	movw	r2, #4999	; 0x1387
 80004fc:	4293      	cmp	r3, r2
 80004fe:	ddf7      	ble.n	80004f0 <button_handler+0xc>
	{
	    /* empty cycle */
	}
	
	if (g_button_state)
 8000500:	4b08      	ldr	r3, [pc, #32]	; (8000524 <button_handler+0x40>)
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	2b00      	cmp	r3, #0
 8000506:	d003      	beq.n	8000510 <button_handler+0x2c>
	{
		g_button_state = 0;
 8000508:	4b06      	ldr	r3, [pc, #24]	; (8000524 <button_handler+0x40>)
 800050a:	2200      	movs	r2, #0
 800050c:	601a      	str	r2, [r3, #0]
	}
	else
	{
	  g_button_state = 1;	
	}
}
 800050e:	e002      	b.n	8000516 <button_handler+0x32>
	{
		g_button_state = 0;
	}
	else
	{
	  g_button_state = 1;	
 8000510:	4b04      	ldr	r3, [pc, #16]	; (8000524 <button_handler+0x40>)
 8000512:	2201      	movs	r2, #1
 8000514:	601a      	str	r2, [r3, #0]
	}
}
 8000516:	bf00      	nop
 8000518:	370c      	adds	r7, #12
 800051a:	46bd      	mov	sp, r7
 800051c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000520:	4770      	bx	lr
 8000522:	bf00      	nop
 8000524:	20000000 	.word	0x20000000

08000528 <main>:
  FORWARD,
  REVERSE,
} led_direction_t;

int main(void)
{
 8000528:	b580      	push	{r7, lr}
 800052a:	b086      	sub	sp, #24
 800052c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef  GPIO_InitStructure;
  led_direction_t direction = FORWARD;
 800052e:	2300      	movs	r3, #0
 8000530:	73fb      	strb	r3, [r7, #15]
  int next_led = 1;
 8000532:	2301      	movs	r3, #1
 8000534:	617b      	str	r3, [r7, #20]
  GPIO_InitStructure.GPIO_Pin = LED7_PIN | LED8_PIN;
  GPIO_Init(GPIOD, &GPIO_InitStructure);

#else
	 
  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 8000536:	2101      	movs	r1, #1
 8000538:	2008      	movs	r0, #8
 800053a:	f000 f967 	bl	800080c <RCC_AHB1PeriphClockCmd>
  
  GPIO_InitStructure.GPIO_Pin = LED1_PIN | LED2_PIN | LED3_PIN | LED4_PIN;
 800053e:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 8000542:	607b      	str	r3, [r7, #4]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000544:	2301      	movs	r3, #1
 8000546:	723b      	strb	r3, [r7, #8]
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000548:	2300      	movs	r3, #0
 800054a:	72bb      	strb	r3, [r7, #10]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 800054c:	2303      	movs	r3, #3
 800054e:	727b      	strb	r3, [r7, #9]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL; 
 8000550:	2300      	movs	r3, #0
 8000552:	72fb      	strb	r3, [r7, #11]
  GPIO_Init(GPIOD, &GPIO_InitStructure);
 8000554:	1d3b      	adds	r3, r7, #4
 8000556:	4619      	mov	r1, r3
 8000558:	4817      	ldr	r0, [pc, #92]	; (80005b8 <main+0x90>)
 800055a:	f000 f9b9 	bl	80008d0 <GPIO_Init>
  
  // init RCC wakeup button
  RCC_AHB1PeriphClockCmd(WAKEUP_BUTTON_GPIO_CLK, ENABLE);
 800055e:	2101      	movs	r1, #1
 8000560:	2001      	movs	r0, #1
 8000562:	f000 f953 	bl	800080c <RCC_AHB1PeriphClockCmd>
  
  GPIO_InitStructure.GPIO_Pin = WAKEUP_BUTTON_PIN;
 8000566:	2301      	movs	r3, #1
 8000568:	607b      	str	r3, [r7, #4]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800056a:	2300      	movs	r3, #0
 800056c:	723b      	strb	r3, [r7, #8]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 800056e:	2300      	movs	r3, #0
 8000570:	72fb      	strb	r3, [r7, #11]
  GPIO_Init(WAKEUP_BUTTON_GPIO_PORT, &GPIO_InitStructure);
 8000572:	1d3b      	adds	r3, r7, #4
 8000574:	4619      	mov	r1, r3
 8000576:	4811      	ldr	r0, [pc, #68]	; (80005bc <main+0x94>)
 8000578:	f000 f9aa 	bl	80008d0 <GPIO_Init>
#endif
	
  GPIOD->BSRRH = 0xffff;
 800057c:	4b0e      	ldr	r3, [pc, #56]	; (80005b8 <main+0x90>)
 800057e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000582:	835a      	strh	r2, [r3, #26]

  it_init();
 8000584:	f7ff fee2 	bl	800034c <it_init>
  
  while (1)
  {
	int i;
	
	if (g_button_state)
 8000588:	4b0d      	ldr	r3, [pc, #52]	; (80005c0 <main+0x98>)
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	2b00      	cmp	r3, #0
 800058e:	d004      	beq.n	800059a <main+0x72>
    //if (GPIO_ReadInputDataBit(WAKEUP_BUTTON_GPIO_PORT, WAKEUP_BUTTON_PIN))
	{
		next_led = blink_next(next_led);
 8000590:	6978      	ldr	r0, [r7, #20]
 8000592:	f7ff ff0f 	bl	80003b4 <blink_next>
 8000596:	6178      	str	r0, [r7, #20]
 8000598:	e003      	b.n	80005a2 <main+0x7a>
	}
	else
	{
		next_led = blink_prev(next_led);
 800059a:	6978      	ldr	r0, [r7, #20]
 800059c:	f7ff ff56 	bl	800044c <blink_prev>
 80005a0:	6178      	str	r0, [r7, #20]
	}
	
	for (i=0; i < SWITCH_DELAY; i++)
 80005a2:	2300      	movs	r3, #0
 80005a4:	613b      	str	r3, [r7, #16]
 80005a6:	e002      	b.n	80005ae <main+0x86>
 80005a8:	693b      	ldr	r3, [r7, #16]
 80005aa:	3301      	adds	r3, #1
 80005ac:	613b      	str	r3, [r7, #16]
 80005ae:	693b      	ldr	r3, [r7, #16]
 80005b0:	4a04      	ldr	r2, [pc, #16]	; (80005c4 <main+0x9c>)
 80005b2:	4293      	cmp	r3, r2
 80005b4:	ddf8      	ble.n	80005a8 <main+0x80>
	{
	    /* empty cycle */
	}
	
  }
 80005b6:	e7e7      	b.n	8000588 <main+0x60>
 80005b8:	40020c00 	.word	0x40020c00
 80005bc:	40020000 	.word	0x40020000
 80005c0:	20000000 	.word	0x20000000
 80005c4:	0007a11f 	.word	0x0007a11f

080005c8 <Reset_Handler>:
 80005c8:	2100      	movs	r1, #0
 80005ca:	e003      	b.n	80005d4 <LoopCopyDataInit>

080005cc <CopyDataInit>:
 80005cc:	4b0a      	ldr	r3, [pc, #40]	; (80005f8 <LoopFillZerobss+0x10>)
 80005ce:	585b      	ldr	r3, [r3, r1]
 80005d0:	5043      	str	r3, [r0, r1]
 80005d2:	3104      	adds	r1, #4

080005d4 <LoopCopyDataInit>:
 80005d4:	4809      	ldr	r0, [pc, #36]	; (80005fc <LoopFillZerobss+0x14>)
 80005d6:	4b0a      	ldr	r3, [pc, #40]	; (8000600 <LoopFillZerobss+0x18>)
 80005d8:	1842      	adds	r2, r0, r1
 80005da:	429a      	cmp	r2, r3
 80005dc:	d3f6      	bcc.n	80005cc <CopyDataInit>
 80005de:	4a09      	ldr	r2, [pc, #36]	; (8000604 <LoopFillZerobss+0x1c>)
 80005e0:	e002      	b.n	80005e8 <LoopFillZerobss>

080005e2 <FillZerobss>:
 80005e2:	2300      	movs	r3, #0
 80005e4:	f842 3b04 	str.w	r3, [r2], #4

080005e8 <LoopFillZerobss>:
 80005e8:	4b07      	ldr	r3, [pc, #28]	; (8000608 <LoopFillZerobss+0x20>)
 80005ea:	429a      	cmp	r2, r3
 80005ec:	d3f9      	bcc.n	80005e2 <FillZerobss>
 80005ee:	f7ff fdfb 	bl	80001e8 <SystemInit>
 80005f2:	f7ff ff99 	bl	8000528 <main>
 80005f6:	4770      	bx	lr
 80005f8:	080009ec 	.word	0x080009ec
 80005fc:	20000000 	.word	0x20000000
 8000600:	20000000 	.word	0x20000000
 8000604:	20000000 	.word	0x20000000
 8000608:	20000000 	.word	0x20000000

0800060c <ADC_IRQHandler>:
 800060c:	e7fe      	b.n	800060c <ADC_IRQHandler>
	...

08000610 <NVIC_Init>:
 8000610:	b480      	push	{r7}
 8000612:	b085      	sub	sp, #20
 8000614:	af00      	add	r7, sp, #0
 8000616:	6078      	str	r0, [r7, #4]
 8000618:	2300      	movs	r3, #0
 800061a:	73fb      	strb	r3, [r7, #15]
 800061c:	2300      	movs	r3, #0
 800061e:	73bb      	strb	r3, [r7, #14]
 8000620:	230f      	movs	r3, #15
 8000622:	737b      	strb	r3, [r7, #13]
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	78db      	ldrb	r3, [r3, #3]
 8000628:	2b00      	cmp	r3, #0
 800062a:	d039      	beq.n	80006a0 <NVIC_Init+0x90>
 800062c:	4b27      	ldr	r3, [pc, #156]	; (80006cc <NVIC_Init+0xbc>)
 800062e:	68db      	ldr	r3, [r3, #12]
 8000630:	43db      	mvns	r3, r3
 8000632:	0a1b      	lsrs	r3, r3, #8
 8000634:	b2db      	uxtb	r3, r3
 8000636:	f003 0307 	and.w	r3, r3, #7
 800063a:	73fb      	strb	r3, [r7, #15]
 800063c:	7bfb      	ldrb	r3, [r7, #15]
 800063e:	f1c3 0304 	rsb	r3, r3, #4
 8000642:	73bb      	strb	r3, [r7, #14]
 8000644:	7b7a      	ldrb	r2, [r7, #13]
 8000646:	7bfb      	ldrb	r3, [r7, #15]
 8000648:	fa42 f303 	asr.w	r3, r2, r3
 800064c:	737b      	strb	r3, [r7, #13]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	785b      	ldrb	r3, [r3, #1]
 8000652:	461a      	mov	r2, r3
 8000654:	7bbb      	ldrb	r3, [r7, #14]
 8000656:	fa02 f303 	lsl.w	r3, r2, r3
 800065a:	73fb      	strb	r3, [r7, #15]
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	789a      	ldrb	r2, [r3, #2]
 8000660:	7b7b      	ldrb	r3, [r7, #13]
 8000662:	4013      	ands	r3, r2
 8000664:	b2da      	uxtb	r2, r3
 8000666:	7bfb      	ldrb	r3, [r7, #15]
 8000668:	4313      	orrs	r3, r2
 800066a:	73fb      	strb	r3, [r7, #15]
 800066c:	7bfb      	ldrb	r3, [r7, #15]
 800066e:	011b      	lsls	r3, r3, #4
 8000670:	73fb      	strb	r3, [r7, #15]
 8000672:	4a17      	ldr	r2, [pc, #92]	; (80006d0 <NVIC_Init+0xc0>)
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	781b      	ldrb	r3, [r3, #0]
 8000678:	4413      	add	r3, r2
 800067a:	7bfa      	ldrb	r2, [r7, #15]
 800067c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000680:	4a13      	ldr	r2, [pc, #76]	; (80006d0 <NVIC_Init+0xc0>)
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	781b      	ldrb	r3, [r3, #0]
 8000686:	095b      	lsrs	r3, r3, #5
 8000688:	b2db      	uxtb	r3, r3
 800068a:	4618      	mov	r0, r3
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	781b      	ldrb	r3, [r3, #0]
 8000690:	f003 031f 	and.w	r3, r3, #31
 8000694:	2101      	movs	r1, #1
 8000696:	fa01 f303 	lsl.w	r3, r1, r3
 800069a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 800069e:	e00f      	b.n	80006c0 <NVIC_Init+0xb0>
 80006a0:	490b      	ldr	r1, [pc, #44]	; (80006d0 <NVIC_Init+0xc0>)
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	781b      	ldrb	r3, [r3, #0]
 80006a6:	095b      	lsrs	r3, r3, #5
 80006a8:	b2db      	uxtb	r3, r3
 80006aa:	4618      	mov	r0, r3
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	781b      	ldrb	r3, [r3, #0]
 80006b0:	f003 031f 	and.w	r3, r3, #31
 80006b4:	2201      	movs	r2, #1
 80006b6:	409a      	lsls	r2, r3
 80006b8:	f100 0320 	add.w	r3, r0, #32
 80006bc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80006c0:	bf00      	nop
 80006c2:	3714      	adds	r7, #20
 80006c4:	46bd      	mov	sp, r7
 80006c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ca:	4770      	bx	lr
 80006cc:	e000ed00 	.word	0xe000ed00
 80006d0:	e000e100 	.word	0xe000e100

080006d4 <EXTI_Init>:
 80006d4:	b480      	push	{r7}
 80006d6:	b085      	sub	sp, #20
 80006d8:	af00      	add	r7, sp, #0
 80006da:	6078      	str	r0, [r7, #4]
 80006dc:	2300      	movs	r3, #0
 80006de:	60fb      	str	r3, [r7, #12]
 80006e0:	4b34      	ldr	r3, [pc, #208]	; (80007b4 <EXTI_Init+0xe0>)
 80006e2:	60fb      	str	r3, [r7, #12]
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	799b      	ldrb	r3, [r3, #6]
 80006e8:	2b00      	cmp	r3, #0
 80006ea:	d04f      	beq.n	800078c <EXTI_Init+0xb8>
 80006ec:	4931      	ldr	r1, [pc, #196]	; (80007b4 <EXTI_Init+0xe0>)
 80006ee:	4b31      	ldr	r3, [pc, #196]	; (80007b4 <EXTI_Init+0xe0>)
 80006f0:	681a      	ldr	r2, [r3, #0]
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	43db      	mvns	r3, r3
 80006f8:	4013      	ands	r3, r2
 80006fa:	600b      	str	r3, [r1, #0]
 80006fc:	492d      	ldr	r1, [pc, #180]	; (80007b4 <EXTI_Init+0xe0>)
 80006fe:	4b2d      	ldr	r3, [pc, #180]	; (80007b4 <EXTI_Init+0xe0>)
 8000700:	685a      	ldr	r2, [r3, #4]
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	43db      	mvns	r3, r3
 8000708:	4013      	ands	r3, r2
 800070a:	604b      	str	r3, [r1, #4]
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	791b      	ldrb	r3, [r3, #4]
 8000710:	461a      	mov	r2, r3
 8000712:	68fb      	ldr	r3, [r7, #12]
 8000714:	4413      	add	r3, r2
 8000716:	60fb      	str	r3, [r7, #12]
 8000718:	68fb      	ldr	r3, [r7, #12]
 800071a:	68fa      	ldr	r2, [r7, #12]
 800071c:	6811      	ldr	r1, [r2, #0]
 800071e:	687a      	ldr	r2, [r7, #4]
 8000720:	6812      	ldr	r2, [r2, #0]
 8000722:	430a      	orrs	r2, r1
 8000724:	601a      	str	r2, [r3, #0]
 8000726:	4923      	ldr	r1, [pc, #140]	; (80007b4 <EXTI_Init+0xe0>)
 8000728:	4b22      	ldr	r3, [pc, #136]	; (80007b4 <EXTI_Init+0xe0>)
 800072a:	689a      	ldr	r2, [r3, #8]
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	43db      	mvns	r3, r3
 8000732:	4013      	ands	r3, r2
 8000734:	608b      	str	r3, [r1, #8]
 8000736:	491f      	ldr	r1, [pc, #124]	; (80007b4 <EXTI_Init+0xe0>)
 8000738:	4b1e      	ldr	r3, [pc, #120]	; (80007b4 <EXTI_Init+0xe0>)
 800073a:	68da      	ldr	r2, [r3, #12]
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	43db      	mvns	r3, r3
 8000742:	4013      	ands	r3, r2
 8000744:	60cb      	str	r3, [r1, #12]
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	795b      	ldrb	r3, [r3, #5]
 800074a:	2b10      	cmp	r3, #16
 800074c:	d10e      	bne.n	800076c <EXTI_Init+0x98>
 800074e:	4919      	ldr	r1, [pc, #100]	; (80007b4 <EXTI_Init+0xe0>)
 8000750:	4b18      	ldr	r3, [pc, #96]	; (80007b4 <EXTI_Init+0xe0>)
 8000752:	689a      	ldr	r2, [r3, #8]
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	4313      	orrs	r3, r2
 800075a:	608b      	str	r3, [r1, #8]
 800075c:	4915      	ldr	r1, [pc, #84]	; (80007b4 <EXTI_Init+0xe0>)
 800075e:	4b15      	ldr	r3, [pc, #84]	; (80007b4 <EXTI_Init+0xe0>)
 8000760:	68da      	ldr	r2, [r3, #12]
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	4313      	orrs	r3, r2
 8000768:	60cb      	str	r3, [r1, #12]
 800076a:	e01d      	b.n	80007a8 <EXTI_Init+0xd4>
 800076c:	4b11      	ldr	r3, [pc, #68]	; (80007b4 <EXTI_Init+0xe0>)
 800076e:	60fb      	str	r3, [r7, #12]
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	795b      	ldrb	r3, [r3, #5]
 8000774:	461a      	mov	r2, r3
 8000776:	68fb      	ldr	r3, [r7, #12]
 8000778:	4413      	add	r3, r2
 800077a:	60fb      	str	r3, [r7, #12]
 800077c:	68fb      	ldr	r3, [r7, #12]
 800077e:	68fa      	ldr	r2, [r7, #12]
 8000780:	6811      	ldr	r1, [r2, #0]
 8000782:	687a      	ldr	r2, [r7, #4]
 8000784:	6812      	ldr	r2, [r2, #0]
 8000786:	430a      	orrs	r2, r1
 8000788:	601a      	str	r2, [r3, #0]
 800078a:	e00d      	b.n	80007a8 <EXTI_Init+0xd4>
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	791b      	ldrb	r3, [r3, #4]
 8000790:	461a      	mov	r2, r3
 8000792:	68fb      	ldr	r3, [r7, #12]
 8000794:	4413      	add	r3, r2
 8000796:	60fb      	str	r3, [r7, #12]
 8000798:	68fb      	ldr	r3, [r7, #12]
 800079a:	68fa      	ldr	r2, [r7, #12]
 800079c:	6811      	ldr	r1, [r2, #0]
 800079e:	687a      	ldr	r2, [r7, #4]
 80007a0:	6812      	ldr	r2, [r2, #0]
 80007a2:	43d2      	mvns	r2, r2
 80007a4:	400a      	ands	r2, r1
 80007a6:	601a      	str	r2, [r3, #0]
 80007a8:	bf00      	nop
 80007aa:	3714      	adds	r7, #20
 80007ac:	46bd      	mov	sp, r7
 80007ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b2:	4770      	bx	lr
 80007b4:	40013c00 	.word	0x40013c00

080007b8 <EXTI_GetITStatus>:
 80007b8:	b480      	push	{r7}
 80007ba:	b085      	sub	sp, #20
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
 80007c0:	2300      	movs	r3, #0
 80007c2:	73fb      	strb	r3, [r7, #15]
 80007c4:	4b08      	ldr	r3, [pc, #32]	; (80007e8 <EXTI_GetITStatus+0x30>)
 80007c6:	695a      	ldr	r2, [r3, #20]
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	4013      	ands	r3, r2
 80007cc:	2b00      	cmp	r3, #0
 80007ce:	d002      	beq.n	80007d6 <EXTI_GetITStatus+0x1e>
 80007d0:	2301      	movs	r3, #1
 80007d2:	73fb      	strb	r3, [r7, #15]
 80007d4:	e001      	b.n	80007da <EXTI_GetITStatus+0x22>
 80007d6:	2300      	movs	r3, #0
 80007d8:	73fb      	strb	r3, [r7, #15]
 80007da:	7bfb      	ldrb	r3, [r7, #15]
 80007dc:	4618      	mov	r0, r3
 80007de:	3714      	adds	r7, #20
 80007e0:	46bd      	mov	sp, r7
 80007e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e6:	4770      	bx	lr
 80007e8:	40013c00 	.word	0x40013c00

080007ec <EXTI_ClearITPendingBit>:
 80007ec:	b480      	push	{r7}
 80007ee:	b083      	sub	sp, #12
 80007f0:	af00      	add	r7, sp, #0
 80007f2:	6078      	str	r0, [r7, #4]
 80007f4:	4a04      	ldr	r2, [pc, #16]	; (8000808 <EXTI_ClearITPendingBit+0x1c>)
 80007f6:	687b      	ldr	r3, [r7, #4]
 80007f8:	6153      	str	r3, [r2, #20]
 80007fa:	bf00      	nop
 80007fc:	370c      	adds	r7, #12
 80007fe:	46bd      	mov	sp, r7
 8000800:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000804:	4770      	bx	lr
 8000806:	bf00      	nop
 8000808:	40013c00 	.word	0x40013c00

0800080c <RCC_AHB1PeriphClockCmd>:
 800080c:	b480      	push	{r7}
 800080e:	b083      	sub	sp, #12
 8000810:	af00      	add	r7, sp, #0
 8000812:	6078      	str	r0, [r7, #4]
 8000814:	460b      	mov	r3, r1
 8000816:	70fb      	strb	r3, [r7, #3]
 8000818:	78fb      	ldrb	r3, [r7, #3]
 800081a:	2b00      	cmp	r3, #0
 800081c:	d006      	beq.n	800082c <RCC_AHB1PeriphClockCmd+0x20>
 800081e:	490a      	ldr	r1, [pc, #40]	; (8000848 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000820:	4b09      	ldr	r3, [pc, #36]	; (8000848 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000822:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	4313      	orrs	r3, r2
 8000828:	630b      	str	r3, [r1, #48]	; 0x30
 800082a:	e006      	b.n	800083a <RCC_AHB1PeriphClockCmd+0x2e>
 800082c:	4906      	ldr	r1, [pc, #24]	; (8000848 <RCC_AHB1PeriphClockCmd+0x3c>)
 800082e:	4b06      	ldr	r3, [pc, #24]	; (8000848 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000830:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	43db      	mvns	r3, r3
 8000836:	4013      	ands	r3, r2
 8000838:	630b      	str	r3, [r1, #48]	; 0x30
 800083a:	bf00      	nop
 800083c:	370c      	adds	r7, #12
 800083e:	46bd      	mov	sp, r7
 8000840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000844:	4770      	bx	lr
 8000846:	bf00      	nop
 8000848:	40023800 	.word	0x40023800

0800084c <SYSCFG_EXTILineConfig>:
 800084c:	b490      	push	{r4, r7}
 800084e:	b084      	sub	sp, #16
 8000850:	af00      	add	r7, sp, #0
 8000852:	4603      	mov	r3, r0
 8000854:	460a      	mov	r2, r1
 8000856:	71fb      	strb	r3, [r7, #7]
 8000858:	4613      	mov	r3, r2
 800085a:	71bb      	strb	r3, [r7, #6]
 800085c:	2300      	movs	r3, #0
 800085e:	60fb      	str	r3, [r7, #12]
 8000860:	79bb      	ldrb	r3, [r7, #6]
 8000862:	f003 0303 	and.w	r3, r3, #3
 8000866:	009b      	lsls	r3, r3, #2
 8000868:	220f      	movs	r2, #15
 800086a:	fa02 f303 	lsl.w	r3, r2, r3
 800086e:	60fb      	str	r3, [r7, #12]
 8000870:	4916      	ldr	r1, [pc, #88]	; (80008cc <SYSCFG_EXTILineConfig+0x80>)
 8000872:	79bb      	ldrb	r3, [r7, #6]
 8000874:	089b      	lsrs	r3, r3, #2
 8000876:	b2db      	uxtb	r3, r3
 8000878:	4618      	mov	r0, r3
 800087a:	4a14      	ldr	r2, [pc, #80]	; (80008cc <SYSCFG_EXTILineConfig+0x80>)
 800087c:	79bb      	ldrb	r3, [r7, #6]
 800087e:	089b      	lsrs	r3, r3, #2
 8000880:	b2db      	uxtb	r3, r3
 8000882:	3302      	adds	r3, #2
 8000884:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000888:	68fb      	ldr	r3, [r7, #12]
 800088a:	43db      	mvns	r3, r3
 800088c:	401a      	ands	r2, r3
 800088e:	1c83      	adds	r3, r0, #2
 8000890:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000894:	480d      	ldr	r0, [pc, #52]	; (80008cc <SYSCFG_EXTILineConfig+0x80>)
 8000896:	79bb      	ldrb	r3, [r7, #6]
 8000898:	089b      	lsrs	r3, r3, #2
 800089a:	b2db      	uxtb	r3, r3
 800089c:	461c      	mov	r4, r3
 800089e:	4a0b      	ldr	r2, [pc, #44]	; (80008cc <SYSCFG_EXTILineConfig+0x80>)
 80008a0:	79bb      	ldrb	r3, [r7, #6]
 80008a2:	089b      	lsrs	r3, r3, #2
 80008a4:	b2db      	uxtb	r3, r3
 80008a6:	3302      	adds	r3, #2
 80008a8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80008ac:	79f9      	ldrb	r1, [r7, #7]
 80008ae:	79bb      	ldrb	r3, [r7, #6]
 80008b0:	f003 0303 	and.w	r3, r3, #3
 80008b4:	009b      	lsls	r3, r3, #2
 80008b6:	fa01 f303 	lsl.w	r3, r1, r3
 80008ba:	431a      	orrs	r2, r3
 80008bc:	1ca3      	adds	r3, r4, #2
 80008be:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80008c2:	bf00      	nop
 80008c4:	3710      	adds	r7, #16
 80008c6:	46bd      	mov	sp, r7
 80008c8:	bc90      	pop	{r4, r7}
 80008ca:	4770      	bx	lr
 80008cc:	40013800 	.word	0x40013800

080008d0 <GPIO_Init>:
 80008d0:	b480      	push	{r7}
 80008d2:	b087      	sub	sp, #28
 80008d4:	af00      	add	r7, sp, #0
 80008d6:	6078      	str	r0, [r7, #4]
 80008d8:	6039      	str	r1, [r7, #0]
 80008da:	2300      	movs	r3, #0
 80008dc:	617b      	str	r3, [r7, #20]
 80008de:	2300      	movs	r3, #0
 80008e0:	613b      	str	r3, [r7, #16]
 80008e2:	2300      	movs	r3, #0
 80008e4:	60fb      	str	r3, [r7, #12]
 80008e6:	2300      	movs	r3, #0
 80008e8:	617b      	str	r3, [r7, #20]
 80008ea:	e076      	b.n	80009da <GPIO_Init+0x10a>
 80008ec:	2201      	movs	r2, #1
 80008ee:	697b      	ldr	r3, [r7, #20]
 80008f0:	fa02 f303 	lsl.w	r3, r2, r3
 80008f4:	613b      	str	r3, [r7, #16]
 80008f6:	683b      	ldr	r3, [r7, #0]
 80008f8:	681a      	ldr	r2, [r3, #0]
 80008fa:	693b      	ldr	r3, [r7, #16]
 80008fc:	4013      	ands	r3, r2
 80008fe:	60fb      	str	r3, [r7, #12]
 8000900:	68fa      	ldr	r2, [r7, #12]
 8000902:	693b      	ldr	r3, [r7, #16]
 8000904:	429a      	cmp	r2, r3
 8000906:	d165      	bne.n	80009d4 <GPIO_Init+0x104>
 8000908:	687b      	ldr	r3, [r7, #4]
 800090a:	681a      	ldr	r2, [r3, #0]
 800090c:	697b      	ldr	r3, [r7, #20]
 800090e:	005b      	lsls	r3, r3, #1
 8000910:	2103      	movs	r1, #3
 8000912:	fa01 f303 	lsl.w	r3, r1, r3
 8000916:	43db      	mvns	r3, r3
 8000918:	401a      	ands	r2, r3
 800091a:	687b      	ldr	r3, [r7, #4]
 800091c:	601a      	str	r2, [r3, #0]
 800091e:	687b      	ldr	r3, [r7, #4]
 8000920:	681a      	ldr	r2, [r3, #0]
 8000922:	683b      	ldr	r3, [r7, #0]
 8000924:	791b      	ldrb	r3, [r3, #4]
 8000926:	4619      	mov	r1, r3
 8000928:	697b      	ldr	r3, [r7, #20]
 800092a:	005b      	lsls	r3, r3, #1
 800092c:	fa01 f303 	lsl.w	r3, r1, r3
 8000930:	431a      	orrs	r2, r3
 8000932:	687b      	ldr	r3, [r7, #4]
 8000934:	601a      	str	r2, [r3, #0]
 8000936:	683b      	ldr	r3, [r7, #0]
 8000938:	791b      	ldrb	r3, [r3, #4]
 800093a:	2b01      	cmp	r3, #1
 800093c:	d003      	beq.n	8000946 <GPIO_Init+0x76>
 800093e:	683b      	ldr	r3, [r7, #0]
 8000940:	791b      	ldrb	r3, [r3, #4]
 8000942:	2b02      	cmp	r3, #2
 8000944:	d12e      	bne.n	80009a4 <GPIO_Init+0xd4>
 8000946:	687b      	ldr	r3, [r7, #4]
 8000948:	689a      	ldr	r2, [r3, #8]
 800094a:	697b      	ldr	r3, [r7, #20]
 800094c:	005b      	lsls	r3, r3, #1
 800094e:	2103      	movs	r1, #3
 8000950:	fa01 f303 	lsl.w	r3, r1, r3
 8000954:	43db      	mvns	r3, r3
 8000956:	401a      	ands	r2, r3
 8000958:	687b      	ldr	r3, [r7, #4]
 800095a:	609a      	str	r2, [r3, #8]
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	689a      	ldr	r2, [r3, #8]
 8000960:	683b      	ldr	r3, [r7, #0]
 8000962:	795b      	ldrb	r3, [r3, #5]
 8000964:	4619      	mov	r1, r3
 8000966:	697b      	ldr	r3, [r7, #20]
 8000968:	005b      	lsls	r3, r3, #1
 800096a:	fa01 f303 	lsl.w	r3, r1, r3
 800096e:	431a      	orrs	r2, r3
 8000970:	687b      	ldr	r3, [r7, #4]
 8000972:	609a      	str	r2, [r3, #8]
 8000974:	687b      	ldr	r3, [r7, #4]
 8000976:	685a      	ldr	r2, [r3, #4]
 8000978:	697b      	ldr	r3, [r7, #20]
 800097a:	b29b      	uxth	r3, r3
 800097c:	4619      	mov	r1, r3
 800097e:	2301      	movs	r3, #1
 8000980:	408b      	lsls	r3, r1
 8000982:	43db      	mvns	r3, r3
 8000984:	401a      	ands	r2, r3
 8000986:	687b      	ldr	r3, [r7, #4]
 8000988:	605a      	str	r2, [r3, #4]
 800098a:	687b      	ldr	r3, [r7, #4]
 800098c:	685b      	ldr	r3, [r3, #4]
 800098e:	683a      	ldr	r2, [r7, #0]
 8000990:	7992      	ldrb	r2, [r2, #6]
 8000992:	4611      	mov	r1, r2
 8000994:	697a      	ldr	r2, [r7, #20]
 8000996:	b292      	uxth	r2, r2
 8000998:	fa01 f202 	lsl.w	r2, r1, r2
 800099c:	b292      	uxth	r2, r2
 800099e:	431a      	orrs	r2, r3
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	605a      	str	r2, [r3, #4]
 80009a4:	687b      	ldr	r3, [r7, #4]
 80009a6:	68da      	ldr	r2, [r3, #12]
 80009a8:	697b      	ldr	r3, [r7, #20]
 80009aa:	b29b      	uxth	r3, r3
 80009ac:	005b      	lsls	r3, r3, #1
 80009ae:	2103      	movs	r1, #3
 80009b0:	fa01 f303 	lsl.w	r3, r1, r3
 80009b4:	43db      	mvns	r3, r3
 80009b6:	401a      	ands	r2, r3
 80009b8:	687b      	ldr	r3, [r7, #4]
 80009ba:	60da      	str	r2, [r3, #12]
 80009bc:	687b      	ldr	r3, [r7, #4]
 80009be:	68da      	ldr	r2, [r3, #12]
 80009c0:	683b      	ldr	r3, [r7, #0]
 80009c2:	79db      	ldrb	r3, [r3, #7]
 80009c4:	4619      	mov	r1, r3
 80009c6:	697b      	ldr	r3, [r7, #20]
 80009c8:	005b      	lsls	r3, r3, #1
 80009ca:	fa01 f303 	lsl.w	r3, r1, r3
 80009ce:	431a      	orrs	r2, r3
 80009d0:	687b      	ldr	r3, [r7, #4]
 80009d2:	60da      	str	r2, [r3, #12]
 80009d4:	697b      	ldr	r3, [r7, #20]
 80009d6:	3301      	adds	r3, #1
 80009d8:	617b      	str	r3, [r7, #20]
 80009da:	697b      	ldr	r3, [r7, #20]
 80009dc:	2b0f      	cmp	r3, #15
 80009de:	d985      	bls.n	80008ec <GPIO_Init+0x1c>
 80009e0:	bf00      	nop
 80009e2:	371c      	adds	r7, #28
 80009e4:	46bd      	mov	sp, r7
 80009e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ea:	4770      	bx	lr
