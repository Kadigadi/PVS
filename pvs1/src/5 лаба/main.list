
main.elf:     file format elf32-littlearm


Disassembly of section .text:

08000188 <NMI_Handler>:
 8000188:	b480      	push	{r7}
 800018a:	af00      	add	r7, sp, #0
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000194:	4770      	bx	lr

08000196 <HardFault_Handler>:
 8000196:	b480      	push	{r7}
 8000198:	af00      	add	r7, sp, #0
 800019a:	e7fe      	b.n	800019a <HardFault_Handler+0x4>

0800019c <MemManage_Handler>:
 800019c:	b480      	push	{r7}
 800019e:	af00      	add	r7, sp, #0
 80001a0:	e7fe      	b.n	80001a0 <MemManage_Handler+0x4>

080001a2 <BusFault_Handler>:
 80001a2:	b480      	push	{r7}
 80001a4:	af00      	add	r7, sp, #0
 80001a6:	e7fe      	b.n	80001a6 <BusFault_Handler+0x4>

080001a8 <UsageFault_Handler>:
 80001a8:	b480      	push	{r7}
 80001aa:	af00      	add	r7, sp, #0
 80001ac:	e7fe      	b.n	80001ac <UsageFault_Handler+0x4>

080001ae <SVC_Handler>:
 80001ae:	b480      	push	{r7}
 80001b0:	af00      	add	r7, sp, #0
 80001b2:	bf00      	nop
 80001b4:	46bd      	mov	sp, r7
 80001b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ba:	4770      	bx	lr

080001bc <DebugMon_Handler>:
 80001bc:	b480      	push	{r7}
 80001be:	af00      	add	r7, sp, #0
 80001c0:	bf00      	nop
 80001c2:	46bd      	mov	sp, r7
 80001c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001c8:	4770      	bx	lr

080001ca <PendSV_Handler>:
 80001ca:	b480      	push	{r7}
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	bf00      	nop
 80001d0:	46bd      	mov	sp, r7
 80001d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001d6:	4770      	bx	lr

080001d8 <SysTick_Handler>:
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0
 80001dc:	bf00      	nop
 80001de:	46bd      	mov	sp, r7
 80001e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001e4:	4770      	bx	lr
	...

080001e8 <SystemInit>:
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
 80001ec:	4a16      	ldr	r2, [pc, #88]	; (8000248 <SystemInit+0x60>)
 80001ee:	4b16      	ldr	r3, [pc, #88]	; (8000248 <SystemInit+0x60>)
 80001f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80001f4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80001f8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80001fc:	4a13      	ldr	r2, [pc, #76]	; (800024c <SystemInit+0x64>)
 80001fe:	4b13      	ldr	r3, [pc, #76]	; (800024c <SystemInit+0x64>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f043 0301 	orr.w	r3, r3, #1
 8000206:	6013      	str	r3, [r2, #0]
 8000208:	4b10      	ldr	r3, [pc, #64]	; (800024c <SystemInit+0x64>)
 800020a:	2200      	movs	r2, #0
 800020c:	609a      	str	r2, [r3, #8]
 800020e:	4a0f      	ldr	r2, [pc, #60]	; (800024c <SystemInit+0x64>)
 8000210:	4b0e      	ldr	r3, [pc, #56]	; (800024c <SystemInit+0x64>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000218:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800021c:	6013      	str	r3, [r2, #0]
 800021e:	4b0b      	ldr	r3, [pc, #44]	; (800024c <SystemInit+0x64>)
 8000220:	4a0b      	ldr	r2, [pc, #44]	; (8000250 <SystemInit+0x68>)
 8000222:	605a      	str	r2, [r3, #4]
 8000224:	4a09      	ldr	r2, [pc, #36]	; (800024c <SystemInit+0x64>)
 8000226:	4b09      	ldr	r3, [pc, #36]	; (800024c <SystemInit+0x64>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800022e:	6013      	str	r3, [r2, #0]
 8000230:	4b06      	ldr	r3, [pc, #24]	; (800024c <SystemInit+0x64>)
 8000232:	2200      	movs	r2, #0
 8000234:	60da      	str	r2, [r3, #12]
 8000236:	f000 f80d 	bl	8000254 <SetSysClock>
 800023a:	4b03      	ldr	r3, [pc, #12]	; (8000248 <SystemInit+0x60>)
 800023c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000240:	609a      	str	r2, [r3, #8]
 8000242:	bf00      	nop
 8000244:	bd80      	pop	{r7, pc}
 8000246:	bf00      	nop
 8000248:	e000ed00 	.word	0xe000ed00
 800024c:	40023800 	.word	0x40023800
 8000250:	24003010 	.word	0x24003010

08000254 <SetSysClock>:
 8000254:	b480      	push	{r7}
 8000256:	b083      	sub	sp, #12
 8000258:	af00      	add	r7, sp, #0
 800025a:	2300      	movs	r3, #0
 800025c:	607b      	str	r3, [r7, #4]
 800025e:	2300      	movs	r3, #0
 8000260:	603b      	str	r3, [r7, #0]
 8000262:	4a36      	ldr	r2, [pc, #216]	; (800033c <SetSysClock+0xe8>)
 8000264:	4b35      	ldr	r3, [pc, #212]	; (800033c <SetSysClock+0xe8>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800026c:	6013      	str	r3, [r2, #0]
 800026e:	4b33      	ldr	r3, [pc, #204]	; (800033c <SetSysClock+0xe8>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000276:	603b      	str	r3, [r7, #0]
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	3301      	adds	r3, #1
 800027c:	607b      	str	r3, [r7, #4]
 800027e:	683b      	ldr	r3, [r7, #0]
 8000280:	2b00      	cmp	r3, #0
 8000282:	d103      	bne.n	800028c <SetSysClock+0x38>
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	f5b3 4fa0 	cmp.w	r3, #20480	; 0x5000
 800028a:	d1f0      	bne.n	800026e <SetSysClock+0x1a>
 800028c:	4b2b      	ldr	r3, [pc, #172]	; (800033c <SetSysClock+0xe8>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000294:	2b00      	cmp	r3, #0
 8000296:	d002      	beq.n	800029e <SetSysClock+0x4a>
 8000298:	2301      	movs	r3, #1
 800029a:	603b      	str	r3, [r7, #0]
 800029c:	e001      	b.n	80002a2 <SetSysClock+0x4e>
 800029e:	2300      	movs	r3, #0
 80002a0:	603b      	str	r3, [r7, #0]
 80002a2:	683b      	ldr	r3, [r7, #0]
 80002a4:	2b01      	cmp	r3, #1
 80002a6:	d142      	bne.n	800032e <SetSysClock+0xda>
 80002a8:	4a24      	ldr	r2, [pc, #144]	; (800033c <SetSysClock+0xe8>)
 80002aa:	4b24      	ldr	r3, [pc, #144]	; (800033c <SetSysClock+0xe8>)
 80002ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80002b2:	6413      	str	r3, [r2, #64]	; 0x40
 80002b4:	4a22      	ldr	r2, [pc, #136]	; (8000340 <SetSysClock+0xec>)
 80002b6:	4b22      	ldr	r3, [pc, #136]	; (8000340 <SetSysClock+0xec>)
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80002be:	6013      	str	r3, [r2, #0]
 80002c0:	4a1e      	ldr	r2, [pc, #120]	; (800033c <SetSysClock+0xe8>)
 80002c2:	4b1e      	ldr	r3, [pc, #120]	; (800033c <SetSysClock+0xe8>)
 80002c4:	689b      	ldr	r3, [r3, #8]
 80002c6:	6093      	str	r3, [r2, #8]
 80002c8:	4a1c      	ldr	r2, [pc, #112]	; (800033c <SetSysClock+0xe8>)
 80002ca:	4b1c      	ldr	r3, [pc, #112]	; (800033c <SetSysClock+0xe8>)
 80002cc:	689b      	ldr	r3, [r3, #8]
 80002ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80002d2:	6093      	str	r3, [r2, #8]
 80002d4:	4a19      	ldr	r2, [pc, #100]	; (800033c <SetSysClock+0xe8>)
 80002d6:	4b19      	ldr	r3, [pc, #100]	; (800033c <SetSysClock+0xe8>)
 80002d8:	689b      	ldr	r3, [r3, #8]
 80002da:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 80002de:	6093      	str	r3, [r2, #8]
 80002e0:	4b16      	ldr	r3, [pc, #88]	; (800033c <SetSysClock+0xe8>)
 80002e2:	4a18      	ldr	r2, [pc, #96]	; (8000344 <SetSysClock+0xf0>)
 80002e4:	605a      	str	r2, [r3, #4]
 80002e6:	4a15      	ldr	r2, [pc, #84]	; (800033c <SetSysClock+0xe8>)
 80002e8:	4b14      	ldr	r3, [pc, #80]	; (800033c <SetSysClock+0xe8>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002f0:	6013      	str	r3, [r2, #0]
 80002f2:	bf00      	nop
 80002f4:	4b11      	ldr	r3, [pc, #68]	; (800033c <SetSysClock+0xe8>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80002fc:	2b00      	cmp	r3, #0
 80002fe:	d0f9      	beq.n	80002f4 <SetSysClock+0xa0>
 8000300:	4b11      	ldr	r3, [pc, #68]	; (8000348 <SetSysClock+0xf4>)
 8000302:	f240 7205 	movw	r2, #1797	; 0x705
 8000306:	601a      	str	r2, [r3, #0]
 8000308:	4a0c      	ldr	r2, [pc, #48]	; (800033c <SetSysClock+0xe8>)
 800030a:	4b0c      	ldr	r3, [pc, #48]	; (800033c <SetSysClock+0xe8>)
 800030c:	689b      	ldr	r3, [r3, #8]
 800030e:	f023 0303 	bic.w	r3, r3, #3
 8000312:	6093      	str	r3, [r2, #8]
 8000314:	4a09      	ldr	r2, [pc, #36]	; (800033c <SetSysClock+0xe8>)
 8000316:	4b09      	ldr	r3, [pc, #36]	; (800033c <SetSysClock+0xe8>)
 8000318:	689b      	ldr	r3, [r3, #8]
 800031a:	f043 0302 	orr.w	r3, r3, #2
 800031e:	6093      	str	r3, [r2, #8]
 8000320:	bf00      	nop
 8000322:	4b06      	ldr	r3, [pc, #24]	; (800033c <SetSysClock+0xe8>)
 8000324:	689b      	ldr	r3, [r3, #8]
 8000326:	f003 030c 	and.w	r3, r3, #12
 800032a:	2b08      	cmp	r3, #8
 800032c:	d1f9      	bne.n	8000322 <SetSysClock+0xce>
 800032e:	bf00      	nop
 8000330:	370c      	adds	r7, #12
 8000332:	46bd      	mov	sp, r7
 8000334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000338:	4770      	bx	lr
 800033a:	bf00      	nop
 800033c:	40023800 	.word	0x40023800
 8000340:	40007000 	.word	0x40007000
 8000344:	07405419 	.word	0x07405419
 8000348:	40023c00 	.word	0x40023c00

0800034c <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800034c:	b480      	push	{r7}
 800034e:	b083      	sub	sp, #12
 8000350:	af00      	add	r7, sp, #0
 8000352:	4603      	mov	r3, r0
 8000354:	71fb      	strb	r3, [r7, #7]
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
 8000356:	4909      	ldr	r1, [pc, #36]	; (800037c <NVIC_EnableIRQ+0x30>)
 8000358:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800035c:	095b      	lsrs	r3, r3, #5
 800035e:	79fa      	ldrb	r2, [r7, #7]
 8000360:	f002 021f 	and.w	r2, r2, #31
 8000364:	2001      	movs	r0, #1
 8000366:	fa00 f202 	lsl.w	r2, r0, r2
 800036a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800036e:	bf00      	nop
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000378:	4770      	bx	lr
 800037a:	bf00      	nop
 800037c:	e000e100 	.word	0xe000e100

08000380 <it_init>:
#define SWITCH_DELAY 500000

int next_led = 1;

void it_init() 
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
    SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA,EXTI_PinSource0);
 8000386:	2100      	movs	r1, #0
 8000388:	2000      	movs	r0, #0
 800038a:	f000 facf 	bl	800092c <SYSCFG_EXTILineConfig>
    EXTI_InitTypeDef exti;  // структура для настроки
    exti.EXTI_Line = EXTI_Line0;    /// кнопка на линии 0
 800038e:	2301      	movs	r3, #1
 8000390:	60bb      	str	r3, [r7, #8]
    exti.EXTI_Mode = EXTI_Mode_Interrupt;    // прерывание (а не событие)
 8000392:	2300      	movs	r3, #0
 8000394:	733b      	strb	r3, [r7, #12]
    exti.EXTI_Trigger = EXTI_Trigger_Rising;  // срабатываем по переднему фронту импульса
 8000396:	2308      	movs	r3, #8
 8000398:	737b      	strb	r3, [r7, #13]
    exti.EXTI_LineCmd = ENABLE;    /// вкл
 800039a:	2301      	movs	r3, #1
 800039c:	73bb      	strb	r3, [r7, #14]
 
    EXTI_Init(&exti);
 800039e:	f107 0308 	add.w	r3, r7, #8
 80003a2:	4618      	mov	r0, r3
 80003a4:	f000 f9e6 	bl	8000774 <EXTI_Init>
 
    NVIC_InitTypeDef nvic;
    nvic.NVIC_IRQChannel = EXTI0_IRQn;  // указываем канал IRQ
 80003a8:	2306      	movs	r3, #6
 80003aa:	713b      	strb	r3, [r7, #4]
    nvic.NVIC_IRQChannelPreemptionPriority = 2;  // приоритет канала ( 0 (самый приоритетный) - 15)
 80003ac:	2302      	movs	r3, #2
 80003ae:	717b      	strb	r3, [r7, #5]
    nvic.NVIC_IRQChannelSubPriority = 2;  // приоритет подгруппы
 80003b0:	2302      	movs	r3, #2
 80003b2:	71bb      	strb	r3, [r7, #6]
    nvic.NVIC_IRQChannelCmd = ENABLE;
 80003b4:	2301      	movs	r3, #1
 80003b6:	71fb      	strb	r3, [r7, #7]
 
    NVIC_Init(&nvic);
 80003b8:	1d3b      	adds	r3, r7, #4
 80003ba:	4618      	mov	r0, r3
 80003bc:	f000 f978 	bl	80006b0 <NVIC_Init>
}
 80003c0:	bf00      	nop
 80003c2:	3710      	adds	r7, #16
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bd80      	pop	{r7, pc}

080003c8 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	af00      	add	r7, sp, #0
     /* нужно проверять состояние линии прерывания  */
    if (EXTI_GetITStatus(EXTI_Line0) != RESET){
 80003cc:	2001      	movs	r0, #1
 80003ce:	f000 fa43 	bl	8000858 <EXTI_GetITStatus>
 80003d2:	4603      	mov	r3, r0
 80003d4:	2b00      	cmp	r3, #0
 80003d6:	d004      	beq.n	80003e2 <EXTI0_IRQHandler+0x1a>
		button_handler();
 80003d8:	f000 f89e 	bl	8000518 <button_handler>
        EXTI_ClearITPendingBit(EXTI_Line0);  // сбрасываем флаг прерывания
 80003dc:	2001      	movs	r0, #1
 80003de:	f000 fa55 	bl	800088c <EXTI_ClearITPendingBit>
    }
}
 80003e2:	bf00      	nop
 80003e4:	bd80      	pop	{r7, pc}
 80003e6:	bf00      	nop

080003e8 <blink_next>:

int blink_next(int led)
{
 80003e8:	b480      	push	{r7}
 80003ea:	b085      	sub	sp, #20
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	6078      	str	r0, [r7, #4]
	int next_led;
	switch(led)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	3b01      	subs	r3, #1
 80003f4:	2b03      	cmp	r3, #3
 80003f6:	d83a      	bhi.n	800046e <blink_next+0x86>
 80003f8:	a201      	add	r2, pc, #4	; (adr r2, 8000400 <blink_next+0x18>)
 80003fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003fe:	bf00      	nop
 8000400:	08000411 	.word	0x08000411
 8000404:	08000429 	.word	0x08000429
 8000408:	08000441 	.word	0x08000441
 800040c:	08000459 	.word	0x08000459
	{
		case 1: 
			GPIOD->BSRRH = 0xffff;
 8000410:	4b1a      	ldr	r3, [pc, #104]	; (800047c <blink_next+0x94>)
 8000412:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000416:	835a      	strh	r2, [r3, #26]
			LED1_GPIO_PORT->BSRRL = LED1_PIN;
 8000418:	4b18      	ldr	r3, [pc, #96]	; (800047c <blink_next+0x94>)
 800041a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800041e:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	3301      	adds	r3, #1
 8000424:	60fb      	str	r3, [r7, #12]
			break;
 8000426:	e022      	b.n	800046e <blink_next+0x86>
		case 2:
			GPIOD->BSRRH = 0xffff;
 8000428:	4b14      	ldr	r3, [pc, #80]	; (800047c <blink_next+0x94>)
 800042a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800042e:	835a      	strh	r2, [r3, #26]
			LED2_GPIO_PORT->BSRRL = LED2_PIN;
 8000430:	4b12      	ldr	r3, [pc, #72]	; (800047c <blink_next+0x94>)
 8000432:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000436:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	3301      	adds	r3, #1
 800043c:	60fb      	str	r3, [r7, #12]
			break;
 800043e:	e016      	b.n	800046e <blink_next+0x86>
		case 3: 
			GPIOD->BSRRH = 0xffff;
 8000440:	4b0e      	ldr	r3, [pc, #56]	; (800047c <blink_next+0x94>)
 8000442:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000446:	835a      	strh	r2, [r3, #26]
			LED3_GPIO_PORT->BSRRL = LED3_PIN;
 8000448:	4b0c      	ldr	r3, [pc, #48]	; (800047c <blink_next+0x94>)
 800044a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800044e:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	3301      	adds	r3, #1
 8000454:	60fb      	str	r3, [r7, #12]
			break;
 8000456:	e00a      	b.n	800046e <blink_next+0x86>
		case 4: 
			GPIOD->BSRRH = 0xffff;
 8000458:	4b08      	ldr	r3, [pc, #32]	; (800047c <blink_next+0x94>)
 800045a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800045e:	835a      	strh	r2, [r3, #26]
			LED4_GPIO_PORT->BSRRL = LED4_PIN;
 8000460:	4b06      	ldr	r3, [pc, #24]	; (800047c <blink_next+0x94>)
 8000462:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000466:	831a      	strh	r2, [r3, #24]
			next_led = 1;
 8000468:	2301      	movs	r3, #1
 800046a:	60fb      	str	r3, [r7, #12]
			break;
 800046c:	bf00      	nop
	}
	return next_led;
 800046e:	68fb      	ldr	r3, [r7, #12]
}
 8000470:	4618      	mov	r0, r3
 8000472:	3714      	adds	r7, #20
 8000474:	46bd      	mov	sp, r7
 8000476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047a:	4770      	bx	lr
 800047c:	40020c00 	.word	0x40020c00

08000480 <blink_prev>:

int blink_prev(int led)
{
 8000480:	b480      	push	{r7}
 8000482:	b085      	sub	sp, #20
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]
	int next_led;
	switch(led)
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	3b01      	subs	r3, #1
 800048c:	2b03      	cmp	r3, #3
 800048e:	d83a      	bhi.n	8000506 <blink_prev+0x86>
 8000490:	a201      	add	r2, pc, #4	; (adr r2, 8000498 <blink_prev+0x18>)
 8000492:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000496:	bf00      	nop
 8000498:	080004a9 	.word	0x080004a9
 800049c:	080004bf 	.word	0x080004bf
 80004a0:	080004d7 	.word	0x080004d7
 80004a4:	080004ef 	.word	0x080004ef
	{
		case 1: 
			GPIOD->BSRRH = 0xffff;
 80004a8:	4b1a      	ldr	r3, [pc, #104]	; (8000514 <blink_prev+0x94>)
 80004aa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80004ae:	835a      	strh	r2, [r3, #26]
			LED1_GPIO_PORT->BSRRL = LED1_PIN;
 80004b0:	4b18      	ldr	r3, [pc, #96]	; (8000514 <blink_prev+0x94>)
 80004b2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80004b6:	831a      	strh	r2, [r3, #24]
			next_led = 4;
 80004b8:	2304      	movs	r3, #4
 80004ba:	60fb      	str	r3, [r7, #12]
			break;
 80004bc:	e023      	b.n	8000506 <blink_prev+0x86>
		case 2:
			GPIOD->BSRRH = 0xffff;
 80004be:	4b15      	ldr	r3, [pc, #84]	; (8000514 <blink_prev+0x94>)
 80004c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80004c4:	835a      	strh	r2, [r3, #26]
			LED2_GPIO_PORT->BSRRL = LED2_PIN;
 80004c6:	4b13      	ldr	r3, [pc, #76]	; (8000514 <blink_prev+0x94>)
 80004c8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004cc:	831a      	strh	r2, [r3, #24]
			next_led = led - 1;
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	3b01      	subs	r3, #1
 80004d2:	60fb      	str	r3, [r7, #12]
			break;
 80004d4:	e017      	b.n	8000506 <blink_prev+0x86>
		case 3: 
			GPIOD->BSRRH = 0xffff;
 80004d6:	4b0f      	ldr	r3, [pc, #60]	; (8000514 <blink_prev+0x94>)
 80004d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80004dc:	835a      	strh	r2, [r3, #26]
			LED3_GPIO_PORT->BSRRL = LED3_PIN;
 80004de:	4b0d      	ldr	r3, [pc, #52]	; (8000514 <blink_prev+0x94>)
 80004e0:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80004e4:	831a      	strh	r2, [r3, #24]
			next_led = led - 1;
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	3b01      	subs	r3, #1
 80004ea:	60fb      	str	r3, [r7, #12]
			break;
 80004ec:	e00b      	b.n	8000506 <blink_prev+0x86>
		case 4: 
			GPIOD->BSRRH = 0xffff;
 80004ee:	4b09      	ldr	r3, [pc, #36]	; (8000514 <blink_prev+0x94>)
 80004f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80004f4:	835a      	strh	r2, [r3, #26]
			LED4_GPIO_PORT->BSRRL = LED4_PIN;
 80004f6:	4b07      	ldr	r3, [pc, #28]	; (8000514 <blink_prev+0x94>)
 80004f8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80004fc:	831a      	strh	r2, [r3, #24]
			next_led = led - 1;
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	3b01      	subs	r3, #1
 8000502:	60fb      	str	r3, [r7, #12]
			break;
 8000504:	bf00      	nop
	}
	return next_led;
 8000506:	68fb      	ldr	r3, [r7, #12]
}	
 8000508:	4618      	mov	r0, r3
 800050a:	3714      	adds	r7, #20
 800050c:	46bd      	mov	sp, r7
 800050e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000512:	4770      	bx	lr
 8000514:	40020c00 	.word	0x40020c00

08000518 <button_handler>:

int g_button_state = 0;

void button_handler()
{
 8000518:	b480      	push	{r7}
 800051a:	b083      	sub	sp, #12
 800051c:	af00      	add	r7, sp, #0
	int i;
	
	for (i=0; i < SWITCH_DELAY/100; i++)
 800051e:	2300      	movs	r3, #0
 8000520:	607b      	str	r3, [r7, #4]
 8000522:	e002      	b.n	800052a <button_handler+0x12>
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	3301      	adds	r3, #1
 8000528:	607b      	str	r3, [r7, #4]
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	f241 3287 	movw	r2, #4999	; 0x1387
 8000530:	4293      	cmp	r3, r2
 8000532:	ddf7      	ble.n	8000524 <button_handler+0xc>
	{
	    /* empty cycle */
	}
	
	if (g_button_state)
 8000534:	4b08      	ldr	r3, [pc, #32]	; (8000558 <button_handler+0x40>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	2b00      	cmp	r3, #0
 800053a:	d003      	beq.n	8000544 <button_handler+0x2c>
	{
		g_button_state = 0;
 800053c:	4b06      	ldr	r3, [pc, #24]	; (8000558 <button_handler+0x40>)
 800053e:	2200      	movs	r2, #0
 8000540:	601a      	str	r2, [r3, #0]
	}
	else
	{
	  g_button_state = 1;	
	}
}
 8000542:	e002      	b.n	800054a <button_handler+0x32>
	{
		g_button_state = 0;
	}
	else
	{
	  g_button_state = 1;	
 8000544:	4b04      	ldr	r3, [pc, #16]	; (8000558 <button_handler+0x40>)
 8000546:	2201      	movs	r2, #1
 8000548:	601a      	str	r2, [r3, #0]
	}
}
 800054a:	bf00      	nop
 800054c:	370c      	adds	r7, #12
 800054e:	46bd      	mov	sp, r7
 8000550:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000554:	4770      	bx	lr
 8000556:	bf00      	nop
 8000558:	20000004 	.word	0x20000004

0800055c <TIM6_DAC_IRQHandler>:

void TIM6_DAC_IRQHandler(){
 800055c:	b580      	push	{r7, lr}
 800055e:	af00      	add	r7, sp, #0
 
  /* Так как этот обработчик вызывается и для ЦАП, нужно проверять,
   * произошло ли прерывание по переполнению счётчика таймера TIM6.
   */
    if (TIM_GetITStatus(TIM6, TIM_IT_Update) != RESET) {
 8000560:	2101      	movs	r1, #1
 8000562:	4810      	ldr	r0, [pc, #64]	; (80005a4 <TIM6_DAC_IRQHandler+0x48>)
 8000564:	f000 faee 	bl	8000b44 <TIM_GetITStatus>
 8000568:	4603      	mov	r3, r0
 800056a:	2b00      	cmp	r3, #0
 800056c:	d018      	beq.n	80005a0 <TIM6_DAC_IRQHandler+0x44>
    /* Очищаем бит обрабатываемого прерывания */
		TIM_ClearITPendingBit(TIM6, TIM_IT_Update);
 800056e:	2101      	movs	r1, #1
 8000570:	480c      	ldr	r0, [pc, #48]	; (80005a4 <TIM6_DAC_IRQHandler+0x48>)
 8000572:	f000 fb11 	bl	8000b98 <TIM_ClearITPendingBit>
		if (g_button_state)
 8000576:	4b0c      	ldr	r3, [pc, #48]	; (80005a8 <TIM6_DAC_IRQHandler+0x4c>)
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	2b00      	cmp	r3, #0
 800057c:	d008      	beq.n	8000590 <TIM6_DAC_IRQHandler+0x34>
		//if (GPIO_ReadInputDataBit(WAKEUP_BUTTON_GPIO_PORT, WAKEUP_BUTTON_PIN))
		{
			next_led = blink_next(next_led);
 800057e:	4b0b      	ldr	r3, [pc, #44]	; (80005ac <TIM6_DAC_IRQHandler+0x50>)
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	4618      	mov	r0, r3
 8000584:	f7ff ff30 	bl	80003e8 <blink_next>
 8000588:	4602      	mov	r2, r0
 800058a:	4b08      	ldr	r3, [pc, #32]	; (80005ac <TIM6_DAC_IRQHandler+0x50>)
 800058c:	601a      	str	r2, [r3, #0]
		else
		{
			next_led = blink_prev(next_led);
		}
    }
}
 800058e:	e007      	b.n	80005a0 <TIM6_DAC_IRQHandler+0x44>
		{
			next_led = blink_next(next_led);
		}
		else
		{
			next_led = blink_prev(next_led);
 8000590:	4b06      	ldr	r3, [pc, #24]	; (80005ac <TIM6_DAC_IRQHandler+0x50>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	4618      	mov	r0, r3
 8000596:	f7ff ff73 	bl	8000480 <blink_prev>
 800059a:	4602      	mov	r2, r0
 800059c:	4b03      	ldr	r3, [pc, #12]	; (80005ac <TIM6_DAC_IRQHandler+0x50>)
 800059e:	601a      	str	r2, [r3, #0]
		}
    }
}
 80005a0:	bf00      	nop
 80005a2:	bd80      	pop	{r7, pc}
 80005a4:	40001000 	.word	0x40001000
 80005a8:	20000004 	.word	0x20000004
 80005ac:	20000000 	.word	0x20000000

080005b0 <init_timer>:
void init_timer(){
 80005b0:	b580      	push	{r7, lr}
 80005b2:	b084      	sub	sp, #16
 80005b4:	af00      	add	r7, sp, #0
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM6, ENABLE); // включаем тактирование таймера
 80005b6:	2101      	movs	r1, #1
 80005b8:	2010      	movs	r0, #16
 80005ba:	f000 f997 	bl	80008ec <RCC_APB1PeriphClockCmd>
   /* Другие параметры структуры TIM_TimeBaseInitTypeDef
   * не имеют смысла для базовых таймеров.
   */
 
    TIM_TimeBaseInitTypeDef base_timer;
    TIM_TimeBaseStructInit(&base_timer);
 80005be:	1d3b      	adds	r3, r7, #4
 80005c0:	4618      	mov	r0, r3
 80005c2:	f000 fa61 	bl	8000a88 <TIM_TimeBaseStructInit>
  /* Делитель учитывается как TIM_Prescaler + 1, поэтому отнимаем 1 */
    base_timer.TIM_Prescaler = 24000 - 1; // делитель 24000
 80005c6:	f645 53bf 	movw	r3, #23999	; 0x5dbf
 80005ca:	80bb      	strh	r3, [r7, #4]
    base_timer.TIM_Period = 3000; //период 1000 импульсов
 80005cc:	f640 33b8 	movw	r3, #3000	; 0xbb8
 80005d0:	60bb      	str	r3, [r7, #8]
    TIM_TimeBaseInit(TIM6, &base_timer);
 80005d2:	1d3b      	adds	r3, r7, #4
 80005d4:	4619      	mov	r1, r3
 80005d6:	4809      	ldr	r0, [pc, #36]	; (80005fc <init_timer+0x4c>)
 80005d8:	f000 f9ea 	bl	80009b0 <TIM_TimeBaseInit>
 
  /* Разрешаем прерывание по обновлению (в данном случае -
   * по переполнению) счётчика таймера TIM6.
   */
 
    TIM_ITConfig(TIM6, TIM_IT_Update, ENABLE);
 80005dc:	2201      	movs	r2, #1
 80005de:	2101      	movs	r1, #1
 80005e0:	4806      	ldr	r0, [pc, #24]	; (80005fc <init_timer+0x4c>)
 80005e2:	f000 fa8b 	bl	8000afc <TIM_ITConfig>
    TIM_Cmd(TIM6, ENABLE);  // Включаем таймер
 80005e6:	2101      	movs	r1, #1
 80005e8:	4804      	ldr	r0, [pc, #16]	; (80005fc <init_timer+0x4c>)
 80005ea:	f000 fa67 	bl	8000abc <TIM_Cmd>
  /* Разрешаем обработку прерывания по переполнению счётчика
   * таймера TIM6. это же прерывание
   * отвечает и за опустошение ЦАП.
   */
 
    NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80005ee:	2036      	movs	r0, #54	; 0x36
 80005f0:	f7ff feac 	bl	800034c <NVIC_EnableIRQ>
}
 80005f4:	bf00      	nop
 80005f6:	3710      	adds	r7, #16
 80005f8:	46bd      	mov	sp, r7
 80005fa:	bd80      	pop	{r7, pc}
 80005fc:	40001000 	.word	0x40001000

08000600 <main>:

int main(void)
{
 8000600:	b580      	push	{r7, lr}
 8000602:	b082      	sub	sp, #8
 8000604:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef  GPIO_InitStructure;
	 
  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 8000606:	2101      	movs	r1, #1
 8000608:	2008      	movs	r0, #8
 800060a:	f000 f94f 	bl	80008ac <RCC_AHB1PeriphClockCmd>
  
  GPIO_InitStructure.GPIO_Pin = LED1_PIN | LED2_PIN | LED3_PIN | LED4_PIN;
 800060e:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 8000612:	603b      	str	r3, [r7, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000614:	2301      	movs	r3, #1
 8000616:	713b      	strb	r3, [r7, #4]
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000618:	2300      	movs	r3, #0
 800061a:	71bb      	strb	r3, [r7, #6]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 800061c:	2303      	movs	r3, #3
 800061e:	717b      	strb	r3, [r7, #5]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL; 
 8000620:	2300      	movs	r3, #0
 8000622:	71fb      	strb	r3, [r7, #7]
  GPIO_Init(GPIOD, &GPIO_InitStructure);
 8000624:	463b      	mov	r3, r7
 8000626:	4619      	mov	r1, r3
 8000628:	480d      	ldr	r0, [pc, #52]	; (8000660 <main+0x60>)
 800062a:	f000 fac6 	bl	8000bba <GPIO_Init>
  
  // init RCC wakeup button
  RCC_AHB1PeriphClockCmd(WAKEUP_BUTTON_GPIO_CLK, ENABLE);
 800062e:	2101      	movs	r1, #1
 8000630:	2001      	movs	r0, #1
 8000632:	f000 f93b 	bl	80008ac <RCC_AHB1PeriphClockCmd>
  
  GPIO_InitStructure.GPIO_Pin = WAKEUP_BUTTON_PIN;
 8000636:	2301      	movs	r3, #1
 8000638:	603b      	str	r3, [r7, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800063a:	2300      	movs	r3, #0
 800063c:	713b      	strb	r3, [r7, #4]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 800063e:	2300      	movs	r3, #0
 8000640:	71fb      	strb	r3, [r7, #7]
  GPIO_Init(WAKEUP_BUTTON_GPIO_PORT, &GPIO_InitStructure);
 8000642:	463b      	mov	r3, r7
 8000644:	4619      	mov	r1, r3
 8000646:	4807      	ldr	r0, [pc, #28]	; (8000664 <main+0x64>)
 8000648:	f000 fab7 	bl	8000bba <GPIO_Init>
	
  GPIOD->BSRRH = 0xffff;
 800064c:	4b04      	ldr	r3, [pc, #16]	; (8000660 <main+0x60>)
 800064e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000652:	835a      	strh	r2, [r3, #26]

  it_init();
 8000654:	f7ff fe94 	bl	8000380 <it_init>
  
  init_timer();
 8000658:	f7ff ffaa 	bl	80005b0 <init_timer>
  do {
  } while(1);
 800065c:	e7fe      	b.n	800065c <main+0x5c>
 800065e:	bf00      	nop
 8000660:	40020c00 	.word	0x40020c00
 8000664:	40020000 	.word	0x40020000

08000668 <Reset_Handler>:
 8000668:	2100      	movs	r1, #0
 800066a:	e003      	b.n	8000674 <LoopCopyDataInit>

0800066c <CopyDataInit>:
 800066c:	4b0a      	ldr	r3, [pc, #40]	; (8000698 <LoopFillZerobss+0x10>)
 800066e:	585b      	ldr	r3, [r3, r1]
 8000670:	5043      	str	r3, [r0, r1]
 8000672:	3104      	adds	r1, #4

08000674 <LoopCopyDataInit>:
 8000674:	4809      	ldr	r0, [pc, #36]	; (800069c <LoopFillZerobss+0x14>)
 8000676:	4b0a      	ldr	r3, [pc, #40]	; (80006a0 <LoopFillZerobss+0x18>)
 8000678:	1842      	adds	r2, r0, r1
 800067a:	429a      	cmp	r2, r3
 800067c:	d3f6      	bcc.n	800066c <CopyDataInit>
 800067e:	4a09      	ldr	r2, [pc, #36]	; (80006a4 <LoopFillZerobss+0x1c>)
 8000680:	e002      	b.n	8000688 <LoopFillZerobss>

08000682 <FillZerobss>:
 8000682:	2300      	movs	r3, #0
 8000684:	f842 3b04 	str.w	r3, [r2], #4

08000688 <LoopFillZerobss>:
 8000688:	4b07      	ldr	r3, [pc, #28]	; (80006a8 <LoopFillZerobss+0x20>)
 800068a:	429a      	cmp	r2, r3
 800068c:	d3f9      	bcc.n	8000682 <FillZerobss>
 800068e:	f7ff fdab 	bl	80001e8 <SystemInit>
 8000692:	f7ff ffb5 	bl	8000600 <main>
 8000696:	4770      	bx	lr
 8000698:	08000cd8 	.word	0x08000cd8
 800069c:	20000000 	.word	0x20000000
 80006a0:	20000004 	.word	0x20000004
 80006a4:	20000004 	.word	0x20000004
 80006a8:	20000004 	.word	0x20000004

080006ac <ADC_IRQHandler>:
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>
	...

080006b0 <NVIC_Init>:
 80006b0:	b480      	push	{r7}
 80006b2:	b085      	sub	sp, #20
 80006b4:	af00      	add	r7, sp, #0
 80006b6:	6078      	str	r0, [r7, #4]
 80006b8:	2300      	movs	r3, #0
 80006ba:	73fb      	strb	r3, [r7, #15]
 80006bc:	2300      	movs	r3, #0
 80006be:	73bb      	strb	r3, [r7, #14]
 80006c0:	230f      	movs	r3, #15
 80006c2:	737b      	strb	r3, [r7, #13]
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	78db      	ldrb	r3, [r3, #3]
 80006c8:	2b00      	cmp	r3, #0
 80006ca:	d039      	beq.n	8000740 <NVIC_Init+0x90>
 80006cc:	4b27      	ldr	r3, [pc, #156]	; (800076c <NVIC_Init+0xbc>)
 80006ce:	68db      	ldr	r3, [r3, #12]
 80006d0:	43db      	mvns	r3, r3
 80006d2:	0a1b      	lsrs	r3, r3, #8
 80006d4:	b2db      	uxtb	r3, r3
 80006d6:	f003 0307 	and.w	r3, r3, #7
 80006da:	73fb      	strb	r3, [r7, #15]
 80006dc:	7bfb      	ldrb	r3, [r7, #15]
 80006de:	f1c3 0304 	rsb	r3, r3, #4
 80006e2:	73bb      	strb	r3, [r7, #14]
 80006e4:	7b7a      	ldrb	r2, [r7, #13]
 80006e6:	7bfb      	ldrb	r3, [r7, #15]
 80006e8:	fa42 f303 	asr.w	r3, r2, r3
 80006ec:	737b      	strb	r3, [r7, #13]
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	785b      	ldrb	r3, [r3, #1]
 80006f2:	461a      	mov	r2, r3
 80006f4:	7bbb      	ldrb	r3, [r7, #14]
 80006f6:	fa02 f303 	lsl.w	r3, r2, r3
 80006fa:	73fb      	strb	r3, [r7, #15]
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	789a      	ldrb	r2, [r3, #2]
 8000700:	7b7b      	ldrb	r3, [r7, #13]
 8000702:	4013      	ands	r3, r2
 8000704:	b2da      	uxtb	r2, r3
 8000706:	7bfb      	ldrb	r3, [r7, #15]
 8000708:	4313      	orrs	r3, r2
 800070a:	73fb      	strb	r3, [r7, #15]
 800070c:	7bfb      	ldrb	r3, [r7, #15]
 800070e:	011b      	lsls	r3, r3, #4
 8000710:	73fb      	strb	r3, [r7, #15]
 8000712:	4a17      	ldr	r2, [pc, #92]	; (8000770 <NVIC_Init+0xc0>)
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	781b      	ldrb	r3, [r3, #0]
 8000718:	4413      	add	r3, r2
 800071a:	7bfa      	ldrb	r2, [r7, #15]
 800071c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000720:	4a13      	ldr	r2, [pc, #76]	; (8000770 <NVIC_Init+0xc0>)
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	781b      	ldrb	r3, [r3, #0]
 8000726:	095b      	lsrs	r3, r3, #5
 8000728:	b2db      	uxtb	r3, r3
 800072a:	4618      	mov	r0, r3
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	781b      	ldrb	r3, [r3, #0]
 8000730:	f003 031f 	and.w	r3, r3, #31
 8000734:	2101      	movs	r1, #1
 8000736:	fa01 f303 	lsl.w	r3, r1, r3
 800073a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 800073e:	e00f      	b.n	8000760 <NVIC_Init+0xb0>
 8000740:	490b      	ldr	r1, [pc, #44]	; (8000770 <NVIC_Init+0xc0>)
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	781b      	ldrb	r3, [r3, #0]
 8000746:	095b      	lsrs	r3, r3, #5
 8000748:	b2db      	uxtb	r3, r3
 800074a:	4618      	mov	r0, r3
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	781b      	ldrb	r3, [r3, #0]
 8000750:	f003 031f 	and.w	r3, r3, #31
 8000754:	2201      	movs	r2, #1
 8000756:	409a      	lsls	r2, r3
 8000758:	f100 0320 	add.w	r3, r0, #32
 800075c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000760:	bf00      	nop
 8000762:	3714      	adds	r7, #20
 8000764:	46bd      	mov	sp, r7
 8000766:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076a:	4770      	bx	lr
 800076c:	e000ed00 	.word	0xe000ed00
 8000770:	e000e100 	.word	0xe000e100

08000774 <EXTI_Init>:
 8000774:	b480      	push	{r7}
 8000776:	b085      	sub	sp, #20
 8000778:	af00      	add	r7, sp, #0
 800077a:	6078      	str	r0, [r7, #4]
 800077c:	2300      	movs	r3, #0
 800077e:	60fb      	str	r3, [r7, #12]
 8000780:	4b34      	ldr	r3, [pc, #208]	; (8000854 <EXTI_Init+0xe0>)
 8000782:	60fb      	str	r3, [r7, #12]
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	799b      	ldrb	r3, [r3, #6]
 8000788:	2b00      	cmp	r3, #0
 800078a:	d04f      	beq.n	800082c <EXTI_Init+0xb8>
 800078c:	4931      	ldr	r1, [pc, #196]	; (8000854 <EXTI_Init+0xe0>)
 800078e:	4b31      	ldr	r3, [pc, #196]	; (8000854 <EXTI_Init+0xe0>)
 8000790:	681a      	ldr	r2, [r3, #0]
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	43db      	mvns	r3, r3
 8000798:	4013      	ands	r3, r2
 800079a:	600b      	str	r3, [r1, #0]
 800079c:	492d      	ldr	r1, [pc, #180]	; (8000854 <EXTI_Init+0xe0>)
 800079e:	4b2d      	ldr	r3, [pc, #180]	; (8000854 <EXTI_Init+0xe0>)
 80007a0:	685a      	ldr	r2, [r3, #4]
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	681b      	ldr	r3, [r3, #0]
 80007a6:	43db      	mvns	r3, r3
 80007a8:	4013      	ands	r3, r2
 80007aa:	604b      	str	r3, [r1, #4]
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	791b      	ldrb	r3, [r3, #4]
 80007b0:	461a      	mov	r2, r3
 80007b2:	68fb      	ldr	r3, [r7, #12]
 80007b4:	4413      	add	r3, r2
 80007b6:	60fb      	str	r3, [r7, #12]
 80007b8:	68fb      	ldr	r3, [r7, #12]
 80007ba:	68fa      	ldr	r2, [r7, #12]
 80007bc:	6811      	ldr	r1, [r2, #0]
 80007be:	687a      	ldr	r2, [r7, #4]
 80007c0:	6812      	ldr	r2, [r2, #0]
 80007c2:	430a      	orrs	r2, r1
 80007c4:	601a      	str	r2, [r3, #0]
 80007c6:	4923      	ldr	r1, [pc, #140]	; (8000854 <EXTI_Init+0xe0>)
 80007c8:	4b22      	ldr	r3, [pc, #136]	; (8000854 <EXTI_Init+0xe0>)
 80007ca:	689a      	ldr	r2, [r3, #8]
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	43db      	mvns	r3, r3
 80007d2:	4013      	ands	r3, r2
 80007d4:	608b      	str	r3, [r1, #8]
 80007d6:	491f      	ldr	r1, [pc, #124]	; (8000854 <EXTI_Init+0xe0>)
 80007d8:	4b1e      	ldr	r3, [pc, #120]	; (8000854 <EXTI_Init+0xe0>)
 80007da:	68da      	ldr	r2, [r3, #12]
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	43db      	mvns	r3, r3
 80007e2:	4013      	ands	r3, r2
 80007e4:	60cb      	str	r3, [r1, #12]
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	795b      	ldrb	r3, [r3, #5]
 80007ea:	2b10      	cmp	r3, #16
 80007ec:	d10e      	bne.n	800080c <EXTI_Init+0x98>
 80007ee:	4919      	ldr	r1, [pc, #100]	; (8000854 <EXTI_Init+0xe0>)
 80007f0:	4b18      	ldr	r3, [pc, #96]	; (8000854 <EXTI_Init+0xe0>)
 80007f2:	689a      	ldr	r2, [r3, #8]
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	4313      	orrs	r3, r2
 80007fa:	608b      	str	r3, [r1, #8]
 80007fc:	4915      	ldr	r1, [pc, #84]	; (8000854 <EXTI_Init+0xe0>)
 80007fe:	4b15      	ldr	r3, [pc, #84]	; (8000854 <EXTI_Init+0xe0>)
 8000800:	68da      	ldr	r2, [r3, #12]
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	681b      	ldr	r3, [r3, #0]
 8000806:	4313      	orrs	r3, r2
 8000808:	60cb      	str	r3, [r1, #12]
 800080a:	e01d      	b.n	8000848 <EXTI_Init+0xd4>
 800080c:	4b11      	ldr	r3, [pc, #68]	; (8000854 <EXTI_Init+0xe0>)
 800080e:	60fb      	str	r3, [r7, #12]
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	795b      	ldrb	r3, [r3, #5]
 8000814:	461a      	mov	r2, r3
 8000816:	68fb      	ldr	r3, [r7, #12]
 8000818:	4413      	add	r3, r2
 800081a:	60fb      	str	r3, [r7, #12]
 800081c:	68fb      	ldr	r3, [r7, #12]
 800081e:	68fa      	ldr	r2, [r7, #12]
 8000820:	6811      	ldr	r1, [r2, #0]
 8000822:	687a      	ldr	r2, [r7, #4]
 8000824:	6812      	ldr	r2, [r2, #0]
 8000826:	430a      	orrs	r2, r1
 8000828:	601a      	str	r2, [r3, #0]
 800082a:	e00d      	b.n	8000848 <EXTI_Init+0xd4>
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	791b      	ldrb	r3, [r3, #4]
 8000830:	461a      	mov	r2, r3
 8000832:	68fb      	ldr	r3, [r7, #12]
 8000834:	4413      	add	r3, r2
 8000836:	60fb      	str	r3, [r7, #12]
 8000838:	68fb      	ldr	r3, [r7, #12]
 800083a:	68fa      	ldr	r2, [r7, #12]
 800083c:	6811      	ldr	r1, [r2, #0]
 800083e:	687a      	ldr	r2, [r7, #4]
 8000840:	6812      	ldr	r2, [r2, #0]
 8000842:	43d2      	mvns	r2, r2
 8000844:	400a      	ands	r2, r1
 8000846:	601a      	str	r2, [r3, #0]
 8000848:	bf00      	nop
 800084a:	3714      	adds	r7, #20
 800084c:	46bd      	mov	sp, r7
 800084e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000852:	4770      	bx	lr
 8000854:	40013c00 	.word	0x40013c00

08000858 <EXTI_GetITStatus>:
 8000858:	b480      	push	{r7}
 800085a:	b085      	sub	sp, #20
 800085c:	af00      	add	r7, sp, #0
 800085e:	6078      	str	r0, [r7, #4]
 8000860:	2300      	movs	r3, #0
 8000862:	73fb      	strb	r3, [r7, #15]
 8000864:	4b08      	ldr	r3, [pc, #32]	; (8000888 <EXTI_GetITStatus+0x30>)
 8000866:	695a      	ldr	r2, [r3, #20]
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	4013      	ands	r3, r2
 800086c:	2b00      	cmp	r3, #0
 800086e:	d002      	beq.n	8000876 <EXTI_GetITStatus+0x1e>
 8000870:	2301      	movs	r3, #1
 8000872:	73fb      	strb	r3, [r7, #15]
 8000874:	e001      	b.n	800087a <EXTI_GetITStatus+0x22>
 8000876:	2300      	movs	r3, #0
 8000878:	73fb      	strb	r3, [r7, #15]
 800087a:	7bfb      	ldrb	r3, [r7, #15]
 800087c:	4618      	mov	r0, r3
 800087e:	3714      	adds	r7, #20
 8000880:	46bd      	mov	sp, r7
 8000882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000886:	4770      	bx	lr
 8000888:	40013c00 	.word	0x40013c00

0800088c <EXTI_ClearITPendingBit>:
 800088c:	b480      	push	{r7}
 800088e:	b083      	sub	sp, #12
 8000890:	af00      	add	r7, sp, #0
 8000892:	6078      	str	r0, [r7, #4]
 8000894:	4a04      	ldr	r2, [pc, #16]	; (80008a8 <EXTI_ClearITPendingBit+0x1c>)
 8000896:	687b      	ldr	r3, [r7, #4]
 8000898:	6153      	str	r3, [r2, #20]
 800089a:	bf00      	nop
 800089c:	370c      	adds	r7, #12
 800089e:	46bd      	mov	sp, r7
 80008a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a4:	4770      	bx	lr
 80008a6:	bf00      	nop
 80008a8:	40013c00 	.word	0x40013c00

080008ac <RCC_AHB1PeriphClockCmd>:
 80008ac:	b480      	push	{r7}
 80008ae:	b083      	sub	sp, #12
 80008b0:	af00      	add	r7, sp, #0
 80008b2:	6078      	str	r0, [r7, #4]
 80008b4:	460b      	mov	r3, r1
 80008b6:	70fb      	strb	r3, [r7, #3]
 80008b8:	78fb      	ldrb	r3, [r7, #3]
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	d006      	beq.n	80008cc <RCC_AHB1PeriphClockCmd+0x20>
 80008be:	490a      	ldr	r1, [pc, #40]	; (80008e8 <RCC_AHB1PeriphClockCmd+0x3c>)
 80008c0:	4b09      	ldr	r3, [pc, #36]	; (80008e8 <RCC_AHB1PeriphClockCmd+0x3c>)
 80008c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	4313      	orrs	r3, r2
 80008c8:	630b      	str	r3, [r1, #48]	; 0x30
 80008ca:	e006      	b.n	80008da <RCC_AHB1PeriphClockCmd+0x2e>
 80008cc:	4906      	ldr	r1, [pc, #24]	; (80008e8 <RCC_AHB1PeriphClockCmd+0x3c>)
 80008ce:	4b06      	ldr	r3, [pc, #24]	; (80008e8 <RCC_AHB1PeriphClockCmd+0x3c>)
 80008d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80008d2:	687b      	ldr	r3, [r7, #4]
 80008d4:	43db      	mvns	r3, r3
 80008d6:	4013      	ands	r3, r2
 80008d8:	630b      	str	r3, [r1, #48]	; 0x30
 80008da:	bf00      	nop
 80008dc:	370c      	adds	r7, #12
 80008de:	46bd      	mov	sp, r7
 80008e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e4:	4770      	bx	lr
 80008e6:	bf00      	nop
 80008e8:	40023800 	.word	0x40023800

080008ec <RCC_APB1PeriphClockCmd>:
 80008ec:	b480      	push	{r7}
 80008ee:	b083      	sub	sp, #12
 80008f0:	af00      	add	r7, sp, #0
 80008f2:	6078      	str	r0, [r7, #4]
 80008f4:	460b      	mov	r3, r1
 80008f6:	70fb      	strb	r3, [r7, #3]
 80008f8:	78fb      	ldrb	r3, [r7, #3]
 80008fa:	2b00      	cmp	r3, #0
 80008fc:	d006      	beq.n	800090c <RCC_APB1PeriphClockCmd+0x20>
 80008fe:	490a      	ldr	r1, [pc, #40]	; (8000928 <RCC_APB1PeriphClockCmd+0x3c>)
 8000900:	4b09      	ldr	r3, [pc, #36]	; (8000928 <RCC_APB1PeriphClockCmd+0x3c>)
 8000902:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000904:	687b      	ldr	r3, [r7, #4]
 8000906:	4313      	orrs	r3, r2
 8000908:	640b      	str	r3, [r1, #64]	; 0x40
 800090a:	e006      	b.n	800091a <RCC_APB1PeriphClockCmd+0x2e>
 800090c:	4906      	ldr	r1, [pc, #24]	; (8000928 <RCC_APB1PeriphClockCmd+0x3c>)
 800090e:	4b06      	ldr	r3, [pc, #24]	; (8000928 <RCC_APB1PeriphClockCmd+0x3c>)
 8000910:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	43db      	mvns	r3, r3
 8000916:	4013      	ands	r3, r2
 8000918:	640b      	str	r3, [r1, #64]	; 0x40
 800091a:	bf00      	nop
 800091c:	370c      	adds	r7, #12
 800091e:	46bd      	mov	sp, r7
 8000920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000924:	4770      	bx	lr
 8000926:	bf00      	nop
 8000928:	40023800 	.word	0x40023800

0800092c <SYSCFG_EXTILineConfig>:
 800092c:	b490      	push	{r4, r7}
 800092e:	b084      	sub	sp, #16
 8000930:	af00      	add	r7, sp, #0
 8000932:	4603      	mov	r3, r0
 8000934:	460a      	mov	r2, r1
 8000936:	71fb      	strb	r3, [r7, #7]
 8000938:	4613      	mov	r3, r2
 800093a:	71bb      	strb	r3, [r7, #6]
 800093c:	2300      	movs	r3, #0
 800093e:	60fb      	str	r3, [r7, #12]
 8000940:	79bb      	ldrb	r3, [r7, #6]
 8000942:	f003 0303 	and.w	r3, r3, #3
 8000946:	009b      	lsls	r3, r3, #2
 8000948:	220f      	movs	r2, #15
 800094a:	fa02 f303 	lsl.w	r3, r2, r3
 800094e:	60fb      	str	r3, [r7, #12]
 8000950:	4916      	ldr	r1, [pc, #88]	; (80009ac <SYSCFG_EXTILineConfig+0x80>)
 8000952:	79bb      	ldrb	r3, [r7, #6]
 8000954:	089b      	lsrs	r3, r3, #2
 8000956:	b2db      	uxtb	r3, r3
 8000958:	4618      	mov	r0, r3
 800095a:	4a14      	ldr	r2, [pc, #80]	; (80009ac <SYSCFG_EXTILineConfig+0x80>)
 800095c:	79bb      	ldrb	r3, [r7, #6]
 800095e:	089b      	lsrs	r3, r3, #2
 8000960:	b2db      	uxtb	r3, r3
 8000962:	3302      	adds	r3, #2
 8000964:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000968:	68fb      	ldr	r3, [r7, #12]
 800096a:	43db      	mvns	r3, r3
 800096c:	401a      	ands	r2, r3
 800096e:	1c83      	adds	r3, r0, #2
 8000970:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000974:	480d      	ldr	r0, [pc, #52]	; (80009ac <SYSCFG_EXTILineConfig+0x80>)
 8000976:	79bb      	ldrb	r3, [r7, #6]
 8000978:	089b      	lsrs	r3, r3, #2
 800097a:	b2db      	uxtb	r3, r3
 800097c:	461c      	mov	r4, r3
 800097e:	4a0b      	ldr	r2, [pc, #44]	; (80009ac <SYSCFG_EXTILineConfig+0x80>)
 8000980:	79bb      	ldrb	r3, [r7, #6]
 8000982:	089b      	lsrs	r3, r3, #2
 8000984:	b2db      	uxtb	r3, r3
 8000986:	3302      	adds	r3, #2
 8000988:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800098c:	79f9      	ldrb	r1, [r7, #7]
 800098e:	79bb      	ldrb	r3, [r7, #6]
 8000990:	f003 0303 	and.w	r3, r3, #3
 8000994:	009b      	lsls	r3, r3, #2
 8000996:	fa01 f303 	lsl.w	r3, r1, r3
 800099a:	431a      	orrs	r2, r3
 800099c:	1ca3      	adds	r3, r4, #2
 800099e:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80009a2:	bf00      	nop
 80009a4:	3710      	adds	r7, #16
 80009a6:	46bd      	mov	sp, r7
 80009a8:	bc90      	pop	{r4, r7}
 80009aa:	4770      	bx	lr
 80009ac:	40013800 	.word	0x40013800

080009b0 <TIM_TimeBaseInit>:
 80009b0:	b480      	push	{r7}
 80009b2:	b085      	sub	sp, #20
 80009b4:	af00      	add	r7, sp, #0
 80009b6:	6078      	str	r0, [r7, #4]
 80009b8:	6039      	str	r1, [r7, #0]
 80009ba:	2300      	movs	r3, #0
 80009bc:	81fb      	strh	r3, [r7, #14]
 80009be:	687b      	ldr	r3, [r7, #4]
 80009c0:	881b      	ldrh	r3, [r3, #0]
 80009c2:	81fb      	strh	r3, [r7, #14]
 80009c4:	687b      	ldr	r3, [r7, #4]
 80009c6:	4a29      	ldr	r2, [pc, #164]	; (8000a6c <TIM_TimeBaseInit+0xbc>)
 80009c8:	4293      	cmp	r3, r2
 80009ca:	d013      	beq.n	80009f4 <TIM_TimeBaseInit+0x44>
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	4a28      	ldr	r2, [pc, #160]	; (8000a70 <TIM_TimeBaseInit+0xc0>)
 80009d0:	4293      	cmp	r3, r2
 80009d2:	d00f      	beq.n	80009f4 <TIM_TimeBaseInit+0x44>
 80009d4:	687b      	ldr	r3, [r7, #4]
 80009d6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80009da:	d00b      	beq.n	80009f4 <TIM_TimeBaseInit+0x44>
 80009dc:	687b      	ldr	r3, [r7, #4]
 80009de:	4a25      	ldr	r2, [pc, #148]	; (8000a74 <TIM_TimeBaseInit+0xc4>)
 80009e0:	4293      	cmp	r3, r2
 80009e2:	d007      	beq.n	80009f4 <TIM_TimeBaseInit+0x44>
 80009e4:	687b      	ldr	r3, [r7, #4]
 80009e6:	4a24      	ldr	r2, [pc, #144]	; (8000a78 <TIM_TimeBaseInit+0xc8>)
 80009e8:	4293      	cmp	r3, r2
 80009ea:	d003      	beq.n	80009f4 <TIM_TimeBaseInit+0x44>
 80009ec:	687b      	ldr	r3, [r7, #4]
 80009ee:	4a23      	ldr	r2, [pc, #140]	; (8000a7c <TIM_TimeBaseInit+0xcc>)
 80009f0:	4293      	cmp	r3, r2
 80009f2:	d108      	bne.n	8000a06 <TIM_TimeBaseInit+0x56>
 80009f4:	89fb      	ldrh	r3, [r7, #14]
 80009f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80009fa:	81fb      	strh	r3, [r7, #14]
 80009fc:	683b      	ldr	r3, [r7, #0]
 80009fe:	885a      	ldrh	r2, [r3, #2]
 8000a00:	89fb      	ldrh	r3, [r7, #14]
 8000a02:	4313      	orrs	r3, r2
 8000a04:	81fb      	strh	r3, [r7, #14]
 8000a06:	687b      	ldr	r3, [r7, #4]
 8000a08:	4a1d      	ldr	r2, [pc, #116]	; (8000a80 <TIM_TimeBaseInit+0xd0>)
 8000a0a:	4293      	cmp	r3, r2
 8000a0c:	d00c      	beq.n	8000a28 <TIM_TimeBaseInit+0x78>
 8000a0e:	687b      	ldr	r3, [r7, #4]
 8000a10:	4a1c      	ldr	r2, [pc, #112]	; (8000a84 <TIM_TimeBaseInit+0xd4>)
 8000a12:	4293      	cmp	r3, r2
 8000a14:	d008      	beq.n	8000a28 <TIM_TimeBaseInit+0x78>
 8000a16:	89fb      	ldrh	r3, [r7, #14]
 8000a18:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000a1c:	81fb      	strh	r3, [r7, #14]
 8000a1e:	683b      	ldr	r3, [r7, #0]
 8000a20:	891a      	ldrh	r2, [r3, #8]
 8000a22:	89fb      	ldrh	r3, [r7, #14]
 8000a24:	4313      	orrs	r3, r2
 8000a26:	81fb      	strh	r3, [r7, #14]
 8000a28:	687b      	ldr	r3, [r7, #4]
 8000a2a:	89fa      	ldrh	r2, [r7, #14]
 8000a2c:	801a      	strh	r2, [r3, #0]
 8000a2e:	683b      	ldr	r3, [r7, #0]
 8000a30:	685a      	ldr	r2, [r3, #4]
 8000a32:	687b      	ldr	r3, [r7, #4]
 8000a34:	62da      	str	r2, [r3, #44]	; 0x2c
 8000a36:	683b      	ldr	r3, [r7, #0]
 8000a38:	881a      	ldrh	r2, [r3, #0]
 8000a3a:	687b      	ldr	r3, [r7, #4]
 8000a3c:	851a      	strh	r2, [r3, #40]	; 0x28
 8000a3e:	687b      	ldr	r3, [r7, #4]
 8000a40:	4a0a      	ldr	r2, [pc, #40]	; (8000a6c <TIM_TimeBaseInit+0xbc>)
 8000a42:	4293      	cmp	r3, r2
 8000a44:	d003      	beq.n	8000a4e <TIM_TimeBaseInit+0x9e>
 8000a46:	687b      	ldr	r3, [r7, #4]
 8000a48:	4a09      	ldr	r2, [pc, #36]	; (8000a70 <TIM_TimeBaseInit+0xc0>)
 8000a4a:	4293      	cmp	r3, r2
 8000a4c:	d104      	bne.n	8000a58 <TIM_TimeBaseInit+0xa8>
 8000a4e:	683b      	ldr	r3, [r7, #0]
 8000a50:	7a9b      	ldrb	r3, [r3, #10]
 8000a52:	b29a      	uxth	r2, r3
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	861a      	strh	r2, [r3, #48]	; 0x30
 8000a58:	687b      	ldr	r3, [r7, #4]
 8000a5a:	2201      	movs	r2, #1
 8000a5c:	829a      	strh	r2, [r3, #20]
 8000a5e:	bf00      	nop
 8000a60:	3714      	adds	r7, #20
 8000a62:	46bd      	mov	sp, r7
 8000a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a68:	4770      	bx	lr
 8000a6a:	bf00      	nop
 8000a6c:	40010000 	.word	0x40010000
 8000a70:	40010400 	.word	0x40010400
 8000a74:	40000400 	.word	0x40000400
 8000a78:	40000800 	.word	0x40000800
 8000a7c:	40000c00 	.word	0x40000c00
 8000a80:	40001000 	.word	0x40001000
 8000a84:	40001400 	.word	0x40001400

08000a88 <TIM_TimeBaseStructInit>:
 8000a88:	b480      	push	{r7}
 8000a8a:	b083      	sub	sp, #12
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	6078      	str	r0, [r7, #4]
 8000a90:	687b      	ldr	r3, [r7, #4]
 8000a92:	f04f 32ff 	mov.w	r2, #4294967295
 8000a96:	605a      	str	r2, [r3, #4]
 8000a98:	687b      	ldr	r3, [r7, #4]
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	801a      	strh	r2, [r3, #0]
 8000a9e:	687b      	ldr	r3, [r7, #4]
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	811a      	strh	r2, [r3, #8]
 8000aa4:	687b      	ldr	r3, [r7, #4]
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	805a      	strh	r2, [r3, #2]
 8000aaa:	687b      	ldr	r3, [r7, #4]
 8000aac:	2200      	movs	r2, #0
 8000aae:	729a      	strb	r2, [r3, #10]
 8000ab0:	bf00      	nop
 8000ab2:	370c      	adds	r7, #12
 8000ab4:	46bd      	mov	sp, r7
 8000ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aba:	4770      	bx	lr

08000abc <TIM_Cmd>:
 8000abc:	b480      	push	{r7}
 8000abe:	b083      	sub	sp, #12
 8000ac0:	af00      	add	r7, sp, #0
 8000ac2:	6078      	str	r0, [r7, #4]
 8000ac4:	460b      	mov	r3, r1
 8000ac6:	70fb      	strb	r3, [r7, #3]
 8000ac8:	78fb      	ldrb	r3, [r7, #3]
 8000aca:	2b00      	cmp	r3, #0
 8000acc:	d008      	beq.n	8000ae0 <TIM_Cmd+0x24>
 8000ace:	687b      	ldr	r3, [r7, #4]
 8000ad0:	881b      	ldrh	r3, [r3, #0]
 8000ad2:	b29b      	uxth	r3, r3
 8000ad4:	f043 0301 	orr.w	r3, r3, #1
 8000ad8:	b29a      	uxth	r2, r3
 8000ada:	687b      	ldr	r3, [r7, #4]
 8000adc:	801a      	strh	r2, [r3, #0]
 8000ade:	e007      	b.n	8000af0 <TIM_Cmd+0x34>
 8000ae0:	687b      	ldr	r3, [r7, #4]
 8000ae2:	881b      	ldrh	r3, [r3, #0]
 8000ae4:	b29b      	uxth	r3, r3
 8000ae6:	f023 0301 	bic.w	r3, r3, #1
 8000aea:	b29a      	uxth	r2, r3
 8000aec:	687b      	ldr	r3, [r7, #4]
 8000aee:	801a      	strh	r2, [r3, #0]
 8000af0:	bf00      	nop
 8000af2:	370c      	adds	r7, #12
 8000af4:	46bd      	mov	sp, r7
 8000af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000afa:	4770      	bx	lr

08000afc <TIM_ITConfig>:
 8000afc:	b480      	push	{r7}
 8000afe:	b083      	sub	sp, #12
 8000b00:	af00      	add	r7, sp, #0
 8000b02:	6078      	str	r0, [r7, #4]
 8000b04:	460b      	mov	r3, r1
 8000b06:	807b      	strh	r3, [r7, #2]
 8000b08:	4613      	mov	r3, r2
 8000b0a:	707b      	strb	r3, [r7, #1]
 8000b0c:	787b      	ldrb	r3, [r7, #1]
 8000b0e:	2b00      	cmp	r3, #0
 8000b10:	d008      	beq.n	8000b24 <TIM_ITConfig+0x28>
 8000b12:	687b      	ldr	r3, [r7, #4]
 8000b14:	899b      	ldrh	r3, [r3, #12]
 8000b16:	b29a      	uxth	r2, r3
 8000b18:	887b      	ldrh	r3, [r7, #2]
 8000b1a:	4313      	orrs	r3, r2
 8000b1c:	b29a      	uxth	r2, r3
 8000b1e:	687b      	ldr	r3, [r7, #4]
 8000b20:	819a      	strh	r2, [r3, #12]
 8000b22:	e009      	b.n	8000b38 <TIM_ITConfig+0x3c>
 8000b24:	687b      	ldr	r3, [r7, #4]
 8000b26:	899b      	ldrh	r3, [r3, #12]
 8000b28:	b29a      	uxth	r2, r3
 8000b2a:	887b      	ldrh	r3, [r7, #2]
 8000b2c:	43db      	mvns	r3, r3
 8000b2e:	b29b      	uxth	r3, r3
 8000b30:	4013      	ands	r3, r2
 8000b32:	b29a      	uxth	r2, r3
 8000b34:	687b      	ldr	r3, [r7, #4]
 8000b36:	819a      	strh	r2, [r3, #12]
 8000b38:	bf00      	nop
 8000b3a:	370c      	adds	r7, #12
 8000b3c:	46bd      	mov	sp, r7
 8000b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b42:	4770      	bx	lr

08000b44 <TIM_GetITStatus>:
 8000b44:	b480      	push	{r7}
 8000b46:	b085      	sub	sp, #20
 8000b48:	af00      	add	r7, sp, #0
 8000b4a:	6078      	str	r0, [r7, #4]
 8000b4c:	460b      	mov	r3, r1
 8000b4e:	807b      	strh	r3, [r7, #2]
 8000b50:	2300      	movs	r3, #0
 8000b52:	73fb      	strb	r3, [r7, #15]
 8000b54:	2300      	movs	r3, #0
 8000b56:	81bb      	strh	r3, [r7, #12]
 8000b58:	2300      	movs	r3, #0
 8000b5a:	817b      	strh	r3, [r7, #10]
 8000b5c:	687b      	ldr	r3, [r7, #4]
 8000b5e:	8a1b      	ldrh	r3, [r3, #16]
 8000b60:	b29a      	uxth	r2, r3
 8000b62:	887b      	ldrh	r3, [r7, #2]
 8000b64:	4013      	ands	r3, r2
 8000b66:	81bb      	strh	r3, [r7, #12]
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	899b      	ldrh	r3, [r3, #12]
 8000b6c:	b29a      	uxth	r2, r3
 8000b6e:	887b      	ldrh	r3, [r7, #2]
 8000b70:	4013      	ands	r3, r2
 8000b72:	817b      	strh	r3, [r7, #10]
 8000b74:	89bb      	ldrh	r3, [r7, #12]
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d005      	beq.n	8000b86 <TIM_GetITStatus+0x42>
 8000b7a:	897b      	ldrh	r3, [r7, #10]
 8000b7c:	2b00      	cmp	r3, #0
 8000b7e:	d002      	beq.n	8000b86 <TIM_GetITStatus+0x42>
 8000b80:	2301      	movs	r3, #1
 8000b82:	73fb      	strb	r3, [r7, #15]
 8000b84:	e001      	b.n	8000b8a <TIM_GetITStatus+0x46>
 8000b86:	2300      	movs	r3, #0
 8000b88:	73fb      	strb	r3, [r7, #15]
 8000b8a:	7bfb      	ldrb	r3, [r7, #15]
 8000b8c:	4618      	mov	r0, r3
 8000b8e:	3714      	adds	r7, #20
 8000b90:	46bd      	mov	sp, r7
 8000b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b96:	4770      	bx	lr

08000b98 <TIM_ClearITPendingBit>:
 8000b98:	b480      	push	{r7}
 8000b9a:	b083      	sub	sp, #12
 8000b9c:	af00      	add	r7, sp, #0
 8000b9e:	6078      	str	r0, [r7, #4]
 8000ba0:	460b      	mov	r3, r1
 8000ba2:	807b      	strh	r3, [r7, #2]
 8000ba4:	887b      	ldrh	r3, [r7, #2]
 8000ba6:	43db      	mvns	r3, r3
 8000ba8:	b29a      	uxth	r2, r3
 8000baa:	687b      	ldr	r3, [r7, #4]
 8000bac:	821a      	strh	r2, [r3, #16]
 8000bae:	bf00      	nop
 8000bb0:	370c      	adds	r7, #12
 8000bb2:	46bd      	mov	sp, r7
 8000bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bb8:	4770      	bx	lr

08000bba <GPIO_Init>:
 8000bba:	b480      	push	{r7}
 8000bbc:	b087      	sub	sp, #28
 8000bbe:	af00      	add	r7, sp, #0
 8000bc0:	6078      	str	r0, [r7, #4]
 8000bc2:	6039      	str	r1, [r7, #0]
 8000bc4:	2300      	movs	r3, #0
 8000bc6:	617b      	str	r3, [r7, #20]
 8000bc8:	2300      	movs	r3, #0
 8000bca:	613b      	str	r3, [r7, #16]
 8000bcc:	2300      	movs	r3, #0
 8000bce:	60fb      	str	r3, [r7, #12]
 8000bd0:	2300      	movs	r3, #0
 8000bd2:	617b      	str	r3, [r7, #20]
 8000bd4:	e076      	b.n	8000cc4 <GPIO_Init+0x10a>
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	697b      	ldr	r3, [r7, #20]
 8000bda:	fa02 f303 	lsl.w	r3, r2, r3
 8000bde:	613b      	str	r3, [r7, #16]
 8000be0:	683b      	ldr	r3, [r7, #0]
 8000be2:	681a      	ldr	r2, [r3, #0]
 8000be4:	693b      	ldr	r3, [r7, #16]
 8000be6:	4013      	ands	r3, r2
 8000be8:	60fb      	str	r3, [r7, #12]
 8000bea:	68fa      	ldr	r2, [r7, #12]
 8000bec:	693b      	ldr	r3, [r7, #16]
 8000bee:	429a      	cmp	r2, r3
 8000bf0:	d165      	bne.n	8000cbe <GPIO_Init+0x104>
 8000bf2:	687b      	ldr	r3, [r7, #4]
 8000bf4:	681a      	ldr	r2, [r3, #0]
 8000bf6:	697b      	ldr	r3, [r7, #20]
 8000bf8:	005b      	lsls	r3, r3, #1
 8000bfa:	2103      	movs	r1, #3
 8000bfc:	fa01 f303 	lsl.w	r3, r1, r3
 8000c00:	43db      	mvns	r3, r3
 8000c02:	401a      	ands	r2, r3
 8000c04:	687b      	ldr	r3, [r7, #4]
 8000c06:	601a      	str	r2, [r3, #0]
 8000c08:	687b      	ldr	r3, [r7, #4]
 8000c0a:	681a      	ldr	r2, [r3, #0]
 8000c0c:	683b      	ldr	r3, [r7, #0]
 8000c0e:	791b      	ldrb	r3, [r3, #4]
 8000c10:	4619      	mov	r1, r3
 8000c12:	697b      	ldr	r3, [r7, #20]
 8000c14:	005b      	lsls	r3, r3, #1
 8000c16:	fa01 f303 	lsl.w	r3, r1, r3
 8000c1a:	431a      	orrs	r2, r3
 8000c1c:	687b      	ldr	r3, [r7, #4]
 8000c1e:	601a      	str	r2, [r3, #0]
 8000c20:	683b      	ldr	r3, [r7, #0]
 8000c22:	791b      	ldrb	r3, [r3, #4]
 8000c24:	2b01      	cmp	r3, #1
 8000c26:	d003      	beq.n	8000c30 <GPIO_Init+0x76>
 8000c28:	683b      	ldr	r3, [r7, #0]
 8000c2a:	791b      	ldrb	r3, [r3, #4]
 8000c2c:	2b02      	cmp	r3, #2
 8000c2e:	d12e      	bne.n	8000c8e <GPIO_Init+0xd4>
 8000c30:	687b      	ldr	r3, [r7, #4]
 8000c32:	689a      	ldr	r2, [r3, #8]
 8000c34:	697b      	ldr	r3, [r7, #20]
 8000c36:	005b      	lsls	r3, r3, #1
 8000c38:	2103      	movs	r1, #3
 8000c3a:	fa01 f303 	lsl.w	r3, r1, r3
 8000c3e:	43db      	mvns	r3, r3
 8000c40:	401a      	ands	r2, r3
 8000c42:	687b      	ldr	r3, [r7, #4]
 8000c44:	609a      	str	r2, [r3, #8]
 8000c46:	687b      	ldr	r3, [r7, #4]
 8000c48:	689a      	ldr	r2, [r3, #8]
 8000c4a:	683b      	ldr	r3, [r7, #0]
 8000c4c:	795b      	ldrb	r3, [r3, #5]
 8000c4e:	4619      	mov	r1, r3
 8000c50:	697b      	ldr	r3, [r7, #20]
 8000c52:	005b      	lsls	r3, r3, #1
 8000c54:	fa01 f303 	lsl.w	r3, r1, r3
 8000c58:	431a      	orrs	r2, r3
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	609a      	str	r2, [r3, #8]
 8000c5e:	687b      	ldr	r3, [r7, #4]
 8000c60:	685a      	ldr	r2, [r3, #4]
 8000c62:	697b      	ldr	r3, [r7, #20]
 8000c64:	b29b      	uxth	r3, r3
 8000c66:	4619      	mov	r1, r3
 8000c68:	2301      	movs	r3, #1
 8000c6a:	408b      	lsls	r3, r1
 8000c6c:	43db      	mvns	r3, r3
 8000c6e:	401a      	ands	r2, r3
 8000c70:	687b      	ldr	r3, [r7, #4]
 8000c72:	605a      	str	r2, [r3, #4]
 8000c74:	687b      	ldr	r3, [r7, #4]
 8000c76:	685b      	ldr	r3, [r3, #4]
 8000c78:	683a      	ldr	r2, [r7, #0]
 8000c7a:	7992      	ldrb	r2, [r2, #6]
 8000c7c:	4611      	mov	r1, r2
 8000c7e:	697a      	ldr	r2, [r7, #20]
 8000c80:	b292      	uxth	r2, r2
 8000c82:	fa01 f202 	lsl.w	r2, r1, r2
 8000c86:	b292      	uxth	r2, r2
 8000c88:	431a      	orrs	r2, r3
 8000c8a:	687b      	ldr	r3, [r7, #4]
 8000c8c:	605a      	str	r2, [r3, #4]
 8000c8e:	687b      	ldr	r3, [r7, #4]
 8000c90:	68da      	ldr	r2, [r3, #12]
 8000c92:	697b      	ldr	r3, [r7, #20]
 8000c94:	b29b      	uxth	r3, r3
 8000c96:	005b      	lsls	r3, r3, #1
 8000c98:	2103      	movs	r1, #3
 8000c9a:	fa01 f303 	lsl.w	r3, r1, r3
 8000c9e:	43db      	mvns	r3, r3
 8000ca0:	401a      	ands	r2, r3
 8000ca2:	687b      	ldr	r3, [r7, #4]
 8000ca4:	60da      	str	r2, [r3, #12]
 8000ca6:	687b      	ldr	r3, [r7, #4]
 8000ca8:	68da      	ldr	r2, [r3, #12]
 8000caa:	683b      	ldr	r3, [r7, #0]
 8000cac:	79db      	ldrb	r3, [r3, #7]
 8000cae:	4619      	mov	r1, r3
 8000cb0:	697b      	ldr	r3, [r7, #20]
 8000cb2:	005b      	lsls	r3, r3, #1
 8000cb4:	fa01 f303 	lsl.w	r3, r1, r3
 8000cb8:	431a      	orrs	r2, r3
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	60da      	str	r2, [r3, #12]
 8000cbe:	697b      	ldr	r3, [r7, #20]
 8000cc0:	3301      	adds	r3, #1
 8000cc2:	617b      	str	r3, [r7, #20]
 8000cc4:	697b      	ldr	r3, [r7, #20]
 8000cc6:	2b0f      	cmp	r3, #15
 8000cc8:	d985      	bls.n	8000bd6 <GPIO_Init+0x1c>
 8000cca:	bf00      	nop
 8000ccc:	371c      	adds	r7, #28
 8000cce:	46bd      	mov	sp, r7
 8000cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cd4:	4770      	bx	lr
	...
