
main.elf:     file format elf32-littlearm


Disassembly of section .text:

08000188 <NMI_Handler>:
 8000188:	b480      	push	{r7}
 800018a:	af00      	add	r7, sp, #0
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000194:	4770      	bx	lr

08000196 <HardFault_Handler>:
 8000196:	b480      	push	{r7}
 8000198:	af00      	add	r7, sp, #0
 800019a:	e7fe      	b.n	800019a <HardFault_Handler+0x4>

0800019c <MemManage_Handler>:
 800019c:	b480      	push	{r7}
 800019e:	af00      	add	r7, sp, #0
 80001a0:	e7fe      	b.n	80001a0 <MemManage_Handler+0x4>

080001a2 <BusFault_Handler>:
 80001a2:	b480      	push	{r7}
 80001a4:	af00      	add	r7, sp, #0
 80001a6:	e7fe      	b.n	80001a6 <BusFault_Handler+0x4>

080001a8 <UsageFault_Handler>:
 80001a8:	b480      	push	{r7}
 80001aa:	af00      	add	r7, sp, #0
 80001ac:	e7fe      	b.n	80001ac <UsageFault_Handler+0x4>

080001ae <SVC_Handler>:
 80001ae:	b480      	push	{r7}
 80001b0:	af00      	add	r7, sp, #0
 80001b2:	bf00      	nop
 80001b4:	46bd      	mov	sp, r7
 80001b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ba:	4770      	bx	lr

080001bc <DebugMon_Handler>:
 80001bc:	b480      	push	{r7}
 80001be:	af00      	add	r7, sp, #0
 80001c0:	bf00      	nop
 80001c2:	46bd      	mov	sp, r7
 80001c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001c8:	4770      	bx	lr

080001ca <PendSV_Handler>:
 80001ca:	b480      	push	{r7}
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	bf00      	nop
 80001d0:	46bd      	mov	sp, r7
 80001d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001d6:	4770      	bx	lr

080001d8 <SysTick_Handler>:
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0
 80001dc:	bf00      	nop
 80001de:	46bd      	mov	sp, r7
 80001e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001e4:	4770      	bx	lr
	...

080001e8 <SystemInit>:
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
 80001ec:	4a16      	ldr	r2, [pc, #88]	; (8000248 <SystemInit+0x60>)
 80001ee:	4b16      	ldr	r3, [pc, #88]	; (8000248 <SystemInit+0x60>)
 80001f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80001f4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80001f8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80001fc:	4a13      	ldr	r2, [pc, #76]	; (800024c <SystemInit+0x64>)
 80001fe:	4b13      	ldr	r3, [pc, #76]	; (800024c <SystemInit+0x64>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f043 0301 	orr.w	r3, r3, #1
 8000206:	6013      	str	r3, [r2, #0]
 8000208:	4b10      	ldr	r3, [pc, #64]	; (800024c <SystemInit+0x64>)
 800020a:	2200      	movs	r2, #0
 800020c:	609a      	str	r2, [r3, #8]
 800020e:	4a0f      	ldr	r2, [pc, #60]	; (800024c <SystemInit+0x64>)
 8000210:	4b0e      	ldr	r3, [pc, #56]	; (800024c <SystemInit+0x64>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000218:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800021c:	6013      	str	r3, [r2, #0]
 800021e:	4b0b      	ldr	r3, [pc, #44]	; (800024c <SystemInit+0x64>)
 8000220:	4a0b      	ldr	r2, [pc, #44]	; (8000250 <SystemInit+0x68>)
 8000222:	605a      	str	r2, [r3, #4]
 8000224:	4a09      	ldr	r2, [pc, #36]	; (800024c <SystemInit+0x64>)
 8000226:	4b09      	ldr	r3, [pc, #36]	; (800024c <SystemInit+0x64>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800022e:	6013      	str	r3, [r2, #0]
 8000230:	4b06      	ldr	r3, [pc, #24]	; (800024c <SystemInit+0x64>)
 8000232:	2200      	movs	r2, #0
 8000234:	60da      	str	r2, [r3, #12]
 8000236:	f000 f80d 	bl	8000254 <SetSysClock>
 800023a:	4b03      	ldr	r3, [pc, #12]	; (8000248 <SystemInit+0x60>)
 800023c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000240:	609a      	str	r2, [r3, #8]
 8000242:	bf00      	nop
 8000244:	bd80      	pop	{r7, pc}
 8000246:	bf00      	nop
 8000248:	e000ed00 	.word	0xe000ed00
 800024c:	40023800 	.word	0x40023800
 8000250:	24003010 	.word	0x24003010

08000254 <SetSysClock>:
 8000254:	b480      	push	{r7}
 8000256:	b083      	sub	sp, #12
 8000258:	af00      	add	r7, sp, #0
 800025a:	2300      	movs	r3, #0
 800025c:	607b      	str	r3, [r7, #4]
 800025e:	2300      	movs	r3, #0
 8000260:	603b      	str	r3, [r7, #0]
 8000262:	4a36      	ldr	r2, [pc, #216]	; (800033c <SetSysClock+0xe8>)
 8000264:	4b35      	ldr	r3, [pc, #212]	; (800033c <SetSysClock+0xe8>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800026c:	6013      	str	r3, [r2, #0]
 800026e:	4b33      	ldr	r3, [pc, #204]	; (800033c <SetSysClock+0xe8>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000276:	603b      	str	r3, [r7, #0]
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	3301      	adds	r3, #1
 800027c:	607b      	str	r3, [r7, #4]
 800027e:	683b      	ldr	r3, [r7, #0]
 8000280:	2b00      	cmp	r3, #0
 8000282:	d103      	bne.n	800028c <SetSysClock+0x38>
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	f5b3 4fa0 	cmp.w	r3, #20480	; 0x5000
 800028a:	d1f0      	bne.n	800026e <SetSysClock+0x1a>
 800028c:	4b2b      	ldr	r3, [pc, #172]	; (800033c <SetSysClock+0xe8>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000294:	2b00      	cmp	r3, #0
 8000296:	d002      	beq.n	800029e <SetSysClock+0x4a>
 8000298:	2301      	movs	r3, #1
 800029a:	603b      	str	r3, [r7, #0]
 800029c:	e001      	b.n	80002a2 <SetSysClock+0x4e>
 800029e:	2300      	movs	r3, #0
 80002a0:	603b      	str	r3, [r7, #0]
 80002a2:	683b      	ldr	r3, [r7, #0]
 80002a4:	2b01      	cmp	r3, #1
 80002a6:	d142      	bne.n	800032e <SetSysClock+0xda>
 80002a8:	4a24      	ldr	r2, [pc, #144]	; (800033c <SetSysClock+0xe8>)
 80002aa:	4b24      	ldr	r3, [pc, #144]	; (800033c <SetSysClock+0xe8>)
 80002ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80002b2:	6413      	str	r3, [r2, #64]	; 0x40
 80002b4:	4a22      	ldr	r2, [pc, #136]	; (8000340 <SetSysClock+0xec>)
 80002b6:	4b22      	ldr	r3, [pc, #136]	; (8000340 <SetSysClock+0xec>)
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80002be:	6013      	str	r3, [r2, #0]
 80002c0:	4a1e      	ldr	r2, [pc, #120]	; (800033c <SetSysClock+0xe8>)
 80002c2:	4b1e      	ldr	r3, [pc, #120]	; (800033c <SetSysClock+0xe8>)
 80002c4:	689b      	ldr	r3, [r3, #8]
 80002c6:	6093      	str	r3, [r2, #8]
 80002c8:	4a1c      	ldr	r2, [pc, #112]	; (800033c <SetSysClock+0xe8>)
 80002ca:	4b1c      	ldr	r3, [pc, #112]	; (800033c <SetSysClock+0xe8>)
 80002cc:	689b      	ldr	r3, [r3, #8]
 80002ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80002d2:	6093      	str	r3, [r2, #8]
 80002d4:	4a19      	ldr	r2, [pc, #100]	; (800033c <SetSysClock+0xe8>)
 80002d6:	4b19      	ldr	r3, [pc, #100]	; (800033c <SetSysClock+0xe8>)
 80002d8:	689b      	ldr	r3, [r3, #8]
 80002da:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 80002de:	6093      	str	r3, [r2, #8]
 80002e0:	4b16      	ldr	r3, [pc, #88]	; (800033c <SetSysClock+0xe8>)
 80002e2:	4a18      	ldr	r2, [pc, #96]	; (8000344 <SetSysClock+0xf0>)
 80002e4:	605a      	str	r2, [r3, #4]
 80002e6:	4a15      	ldr	r2, [pc, #84]	; (800033c <SetSysClock+0xe8>)
 80002e8:	4b14      	ldr	r3, [pc, #80]	; (800033c <SetSysClock+0xe8>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002f0:	6013      	str	r3, [r2, #0]
 80002f2:	bf00      	nop
 80002f4:	4b11      	ldr	r3, [pc, #68]	; (800033c <SetSysClock+0xe8>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80002fc:	2b00      	cmp	r3, #0
 80002fe:	d0f9      	beq.n	80002f4 <SetSysClock+0xa0>
 8000300:	4b11      	ldr	r3, [pc, #68]	; (8000348 <SetSysClock+0xf4>)
 8000302:	f240 7205 	movw	r2, #1797	; 0x705
 8000306:	601a      	str	r2, [r3, #0]
 8000308:	4a0c      	ldr	r2, [pc, #48]	; (800033c <SetSysClock+0xe8>)
 800030a:	4b0c      	ldr	r3, [pc, #48]	; (800033c <SetSysClock+0xe8>)
 800030c:	689b      	ldr	r3, [r3, #8]
 800030e:	f023 0303 	bic.w	r3, r3, #3
 8000312:	6093      	str	r3, [r2, #8]
 8000314:	4a09      	ldr	r2, [pc, #36]	; (800033c <SetSysClock+0xe8>)
 8000316:	4b09      	ldr	r3, [pc, #36]	; (800033c <SetSysClock+0xe8>)
 8000318:	689b      	ldr	r3, [r3, #8]
 800031a:	f043 0302 	orr.w	r3, r3, #2
 800031e:	6093      	str	r3, [r2, #8]
 8000320:	bf00      	nop
 8000322:	4b06      	ldr	r3, [pc, #24]	; (800033c <SetSysClock+0xe8>)
 8000324:	689b      	ldr	r3, [r3, #8]
 8000326:	f003 030c 	and.w	r3, r3, #12
 800032a:	2b08      	cmp	r3, #8
 800032c:	d1f9      	bne.n	8000322 <SetSysClock+0xce>
 800032e:	bf00      	nop
 8000330:	370c      	adds	r7, #12
 8000332:	46bd      	mov	sp, r7
 8000334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000338:	4770      	bx	lr
 800033a:	bf00      	nop
 800033c:	40023800 	.word	0x40023800
 8000340:	40007000 	.word	0x40007000
 8000344:	07405419 	.word	0x07405419
 8000348:	40023c00 	.word	0x40023c00

0800034c <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800034c:	b480      	push	{r7}
 800034e:	b083      	sub	sp, #12
 8000350:	af00      	add	r7, sp, #0
 8000352:	4603      	mov	r3, r0
 8000354:	71fb      	strb	r3, [r7, #7]
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
 8000356:	4909      	ldr	r1, [pc, #36]	; (800037c <NVIC_EnableIRQ+0x30>)
 8000358:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800035c:	095b      	lsrs	r3, r3, #5
 800035e:	79fa      	ldrb	r2, [r7, #7]
 8000360:	f002 021f 	and.w	r2, r2, #31
 8000364:	2001      	movs	r0, #1
 8000366:	fa00 f202 	lsl.w	r2, r0, r2
 800036a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800036e:	bf00      	nop
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000378:	4770      	bx	lr
 800037a:	bf00      	nop
 800037c:	e000e100 	.word	0xe000e100

08000380 <blink_next>:
#define SWITCH_DELAY 500000

int next_led = 1;

int blink_next(int led)
{
 8000380:	b480      	push	{r7}
 8000382:	b085      	sub	sp, #20
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
	int next_led;
	switch(led)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	3b01      	subs	r3, #1
 800038c:	2b03      	cmp	r3, #3
 800038e:	d83a      	bhi.n	8000406 <blink_next+0x86>
 8000390:	a201      	add	r2, pc, #4	; (adr r2, 8000398 <blink_next+0x18>)
 8000392:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000396:	bf00      	nop
 8000398:	080003a9 	.word	0x080003a9
 800039c:	080003c1 	.word	0x080003c1
 80003a0:	080003d9 	.word	0x080003d9
 80003a4:	080003f1 	.word	0x080003f1
	{
		case 1: 
			GPIOD->BSRRH = 0xffff;
 80003a8:	4b1a      	ldr	r3, [pc, #104]	; (8000414 <blink_next+0x94>)
 80003aa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80003ae:	835a      	strh	r2, [r3, #26]
			LED1_GPIO_PORT->BSRRL = LED1_PIN;
 80003b0:	4b18      	ldr	r3, [pc, #96]	; (8000414 <blink_next+0x94>)
 80003b2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80003b6:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	3301      	adds	r3, #1
 80003bc:	60fb      	str	r3, [r7, #12]
			break;
 80003be:	e022      	b.n	8000406 <blink_next+0x86>
		case 2:
			GPIOD->BSRRH = 0xffff;
 80003c0:	4b14      	ldr	r3, [pc, #80]	; (8000414 <blink_next+0x94>)
 80003c2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80003c6:	835a      	strh	r2, [r3, #26]
			LED2_GPIO_PORT->BSRRL = LED2_PIN;
 80003c8:	4b12      	ldr	r3, [pc, #72]	; (8000414 <blink_next+0x94>)
 80003ca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003ce:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	3301      	adds	r3, #1
 80003d4:	60fb      	str	r3, [r7, #12]
			break;
 80003d6:	e016      	b.n	8000406 <blink_next+0x86>
		case 3: 
			GPIOD->BSRRH = 0xffff;
 80003d8:	4b0e      	ldr	r3, [pc, #56]	; (8000414 <blink_next+0x94>)
 80003da:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80003de:	835a      	strh	r2, [r3, #26]
			LED3_GPIO_PORT->BSRRL = LED3_PIN;
 80003e0:	4b0c      	ldr	r3, [pc, #48]	; (8000414 <blink_next+0x94>)
 80003e2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80003e6:	831a      	strh	r2, [r3, #24]
			next_led = led + 1;
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	3301      	adds	r3, #1
 80003ec:	60fb      	str	r3, [r7, #12]
			break;
 80003ee:	e00a      	b.n	8000406 <blink_next+0x86>
		case 4: 
			GPIOD->BSRRH = 0xffff;
 80003f0:	4b08      	ldr	r3, [pc, #32]	; (8000414 <blink_next+0x94>)
 80003f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80003f6:	835a      	strh	r2, [r3, #26]
			LED4_GPIO_PORT->BSRRL = LED4_PIN;
 80003f8:	4b06      	ldr	r3, [pc, #24]	; (8000414 <blink_next+0x94>)
 80003fa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80003fe:	831a      	strh	r2, [r3, #24]
			next_led = 1;
 8000400:	2301      	movs	r3, #1
 8000402:	60fb      	str	r3, [r7, #12]
			break;
 8000404:	bf00      	nop
	}
	return next_led;
 8000406:	68fb      	ldr	r3, [r7, #12]
}
 8000408:	4618      	mov	r0, r3
 800040a:	3714      	adds	r7, #20
 800040c:	46bd      	mov	sp, r7
 800040e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000412:	4770      	bx	lr
 8000414:	40020c00 	.word	0x40020c00

08000418 <TIM6_DAC_IRQHandler>:

void TIM6_DAC_IRQHandler(){
 8000418:	b580      	push	{r7, lr}
 800041a:	af00      	add	r7, sp, #0
 
  /* Так как этот обработчик вызывается и для ЦАП, нужно проверять,
   * произошло ли прерывание по переполнению счётчика таймера TIM6.
   */
    if (TIM_GetITStatus(TIM6, TIM_IT_Update) != RESET) {
 800041c:	2101      	movs	r1, #1
 800041e:	480a      	ldr	r0, [pc, #40]	; (8000448 <TIM6_DAC_IRQHandler+0x30>)
 8000420:	f000 f99e 	bl	8000760 <TIM_GetITStatus>
 8000424:	4603      	mov	r3, r0
 8000426:	2b00      	cmp	r3, #0
 8000428:	d00b      	beq.n	8000442 <TIM6_DAC_IRQHandler+0x2a>
    /* Очищаем бит обрабатываемого прерывания */
      TIM_ClearITPendingBit(TIM6, TIM_IT_Update);
 800042a:	2101      	movs	r1, #1
 800042c:	4806      	ldr	r0, [pc, #24]	; (8000448 <TIM6_DAC_IRQHandler+0x30>)
 800042e:	f000 f9c1 	bl	80007b4 <TIM_ClearITPendingBit>
      next_led = blink_next(next_led);
 8000432:	4b06      	ldr	r3, [pc, #24]	; (800044c <TIM6_DAC_IRQHandler+0x34>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	4618      	mov	r0, r3
 8000438:	f7ff ffa2 	bl	8000380 <blink_next>
 800043c:	4602      	mov	r2, r0
 800043e:	4b03      	ldr	r3, [pc, #12]	; (800044c <TIM6_DAC_IRQHandler+0x34>)
 8000440:	601a      	str	r2, [r3, #0]
    }
}
 8000442:	bf00      	nop
 8000444:	bd80      	pop	{r7, pc}
 8000446:	bf00      	nop
 8000448:	40001000 	.word	0x40001000
 800044c:	20000000 	.word	0x20000000

08000450 <init_timer>:
void init_timer(){
 8000450:	b580      	push	{r7, lr}
 8000452:	b084      	sub	sp, #16
 8000454:	af00      	add	r7, sp, #0
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM6, ENABLE); // включаем тактирование таймера
 8000456:	2101      	movs	r1, #1
 8000458:	2010      	movs	r0, #16
 800045a:	f000 f897 	bl	800058c <RCC_APB1PeriphClockCmd>
   /* Другие параметры структуры TIM_TimeBaseInitTypeDef
   * не имеют смысла для базовых таймеров.
   */
 
    TIM_TimeBaseInitTypeDef base_timer;
    TIM_TimeBaseStructInit(&base_timer);
 800045e:	1d3b      	adds	r3, r7, #4
 8000460:	4618      	mov	r0, r3
 8000462:	f000 f91f 	bl	80006a4 <TIM_TimeBaseStructInit>
  /* Делитель учитывается как TIM_Prescaler + 1, поэтому отнимаем 1 */
    base_timer.TIM_Prescaler = 24000 - 1; // делитель 24000
 8000466:	f645 53bf 	movw	r3, #23999	; 0x5dbf
 800046a:	80bb      	strh	r3, [r7, #4]
    base_timer.TIM_Period = 3000; //период 1000 импульсов
 800046c:	f640 33b8 	movw	r3, #3000	; 0xbb8
 8000470:	60bb      	str	r3, [r7, #8]
    TIM_TimeBaseInit(TIM6, &base_timer);
 8000472:	1d3b      	adds	r3, r7, #4
 8000474:	4619      	mov	r1, r3
 8000476:	4809      	ldr	r0, [pc, #36]	; (800049c <init_timer+0x4c>)
 8000478:	f000 f8a8 	bl	80005cc <TIM_TimeBaseInit>
 
  /* Разрешаем прерывание по обновлению (в данном случае -
   * по переполнению) счётчика таймера TIM6.
   */
 
    TIM_ITConfig(TIM6, TIM_IT_Update, ENABLE);
 800047c:	2201      	movs	r2, #1
 800047e:	2101      	movs	r1, #1
 8000480:	4806      	ldr	r0, [pc, #24]	; (800049c <init_timer+0x4c>)
 8000482:	f000 f949 	bl	8000718 <TIM_ITConfig>
    TIM_Cmd(TIM6, ENABLE);  // Включаем таймер
 8000486:	2101      	movs	r1, #1
 8000488:	4804      	ldr	r0, [pc, #16]	; (800049c <init_timer+0x4c>)
 800048a:	f000 f925 	bl	80006d8 <TIM_Cmd>
  /* Разрешаем обработку прерывания по переполнению счётчика
   * таймера TIM6. это же прерывание
   * отвечает и за опустошение ЦАП.
   */
 
    NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800048e:	2036      	movs	r0, #54	; 0x36
 8000490:	f7ff ff5c 	bl	800034c <NVIC_EnableIRQ>
}
 8000494:	bf00      	nop
 8000496:	3710      	adds	r7, #16
 8000498:	46bd      	mov	sp, r7
 800049a:	bd80      	pop	{r7, pc}
 800049c:	40001000 	.word	0x40001000

080004a0 <main>:

int main()
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b082      	sub	sp, #8
 80004a4:	af00      	add	r7, sp, #0
  GPIO_InitStructure.GPIO_Pin = LED7_PIN | LED8_PIN;
  GPIO_Init(GPIOD, &GPIO_InitStructure);

#else
	 
  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 80004a6:	2101      	movs	r1, #1
 80004a8:	2008      	movs	r0, #8
 80004aa:	f000 f84f 	bl	800054c <RCC_AHB1PeriphClockCmd>
  
  GPIO_InitStructure.GPIO_Pin = LED1_PIN | LED2_PIN | LED3_PIN | LED4_PIN;
 80004ae:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 80004b2:	603b      	str	r3, [r7, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80004b4:	2301      	movs	r3, #1
 80004b6:	713b      	strb	r3, [r7, #4]
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80004b8:	2300      	movs	r3, #0
 80004ba:	71bb      	strb	r3, [r7, #6]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 80004bc:	2303      	movs	r3, #3
 80004be:	717b      	strb	r3, [r7, #5]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL; 
 80004c0:	2300      	movs	r3, #0
 80004c2:	71fb      	strb	r3, [r7, #7]
  GPIO_Init(GPIOD, &GPIO_InitStructure);
 80004c4:	463b      	mov	r3, r7
 80004c6:	4619      	mov	r1, r3
 80004c8:	480c      	ldr	r0, [pc, #48]	; (80004fc <main+0x5c>)
 80004ca:	f000 f984 	bl	80007d6 <GPIO_Init>
  
  // init RCC wakeup button
  RCC_AHB1PeriphClockCmd(WAKEUP_BUTTON_GPIO_CLK, ENABLE);
 80004ce:	2101      	movs	r1, #1
 80004d0:	2001      	movs	r0, #1
 80004d2:	f000 f83b 	bl	800054c <RCC_AHB1PeriphClockCmd>
  
  GPIO_InitStructure.GPIO_Pin = WAKEUP_BUTTON_PIN;
 80004d6:	2301      	movs	r3, #1
 80004d8:	603b      	str	r3, [r7, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 80004da:	2300      	movs	r3, #0
 80004dc:	713b      	strb	r3, [r7, #4]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80004de:	2300      	movs	r3, #0
 80004e0:	71fb      	strb	r3, [r7, #7]
  GPIO_Init(WAKEUP_BUTTON_GPIO_PORT, &GPIO_InitStructure);
 80004e2:	463b      	mov	r3, r7
 80004e4:	4619      	mov	r1, r3
 80004e6:	4806      	ldr	r0, [pc, #24]	; (8000500 <main+0x60>)
 80004e8:	f000 f975 	bl	80007d6 <GPIO_Init>
#endif
	
  GPIOD->BSRRH = 0xffff;
 80004ec:	4b03      	ldr	r3, [pc, #12]	; (80004fc <main+0x5c>)
 80004ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80004f2:	835a      	strh	r2, [r3, #26]

  init_timer();
 80004f4:	f7ff ffac 	bl	8000450 <init_timer>
  do {
  } while(1);
 80004f8:	e7fe      	b.n	80004f8 <main+0x58>
 80004fa:	bf00      	nop
 80004fc:	40020c00 	.word	0x40020c00
 8000500:	40020000 	.word	0x40020000

08000504 <Reset_Handler>:
 8000504:	2100      	movs	r1, #0
 8000506:	e003      	b.n	8000510 <LoopCopyDataInit>

08000508 <CopyDataInit>:
 8000508:	4b0a      	ldr	r3, [pc, #40]	; (8000534 <LoopFillZerobss+0x10>)
 800050a:	585b      	ldr	r3, [r3, r1]
 800050c:	5043      	str	r3, [r0, r1]
 800050e:	3104      	adds	r1, #4

08000510 <LoopCopyDataInit>:
 8000510:	4809      	ldr	r0, [pc, #36]	; (8000538 <LoopFillZerobss+0x14>)
 8000512:	4b0a      	ldr	r3, [pc, #40]	; (800053c <LoopFillZerobss+0x18>)
 8000514:	1842      	adds	r2, r0, r1
 8000516:	429a      	cmp	r2, r3
 8000518:	d3f6      	bcc.n	8000508 <CopyDataInit>
 800051a:	4a09      	ldr	r2, [pc, #36]	; (8000540 <LoopFillZerobss+0x1c>)
 800051c:	e002      	b.n	8000524 <LoopFillZerobss>

0800051e <FillZerobss>:
 800051e:	2300      	movs	r3, #0
 8000520:	f842 3b04 	str.w	r3, [r2], #4

08000524 <LoopFillZerobss>:
 8000524:	4b07      	ldr	r3, [pc, #28]	; (8000544 <LoopFillZerobss+0x20>)
 8000526:	429a      	cmp	r2, r3
 8000528:	d3f9      	bcc.n	800051e <FillZerobss>
 800052a:	f7ff fe5d 	bl	80001e8 <SystemInit>
 800052e:	f7ff ffb7 	bl	80004a0 <main>
 8000532:	4770      	bx	lr
 8000534:	080008f4 	.word	0x080008f4
 8000538:	20000000 	.word	0x20000000
 800053c:	20000004 	.word	0x20000004
 8000540:	20000004 	.word	0x20000004
 8000544:	20000004 	.word	0x20000004

08000548 <ADC_IRQHandler>:
 8000548:	e7fe      	b.n	8000548 <ADC_IRQHandler>
	...

0800054c <RCC_AHB1PeriphClockCmd>:
 800054c:	b480      	push	{r7}
 800054e:	b083      	sub	sp, #12
 8000550:	af00      	add	r7, sp, #0
 8000552:	6078      	str	r0, [r7, #4]
 8000554:	460b      	mov	r3, r1
 8000556:	70fb      	strb	r3, [r7, #3]
 8000558:	78fb      	ldrb	r3, [r7, #3]
 800055a:	2b00      	cmp	r3, #0
 800055c:	d006      	beq.n	800056c <RCC_AHB1PeriphClockCmd+0x20>
 800055e:	490a      	ldr	r1, [pc, #40]	; (8000588 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000560:	4b09      	ldr	r3, [pc, #36]	; (8000588 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000562:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	4313      	orrs	r3, r2
 8000568:	630b      	str	r3, [r1, #48]	; 0x30
 800056a:	e006      	b.n	800057a <RCC_AHB1PeriphClockCmd+0x2e>
 800056c:	4906      	ldr	r1, [pc, #24]	; (8000588 <RCC_AHB1PeriphClockCmd+0x3c>)
 800056e:	4b06      	ldr	r3, [pc, #24]	; (8000588 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000570:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	43db      	mvns	r3, r3
 8000576:	4013      	ands	r3, r2
 8000578:	630b      	str	r3, [r1, #48]	; 0x30
 800057a:	bf00      	nop
 800057c:	370c      	adds	r7, #12
 800057e:	46bd      	mov	sp, r7
 8000580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000584:	4770      	bx	lr
 8000586:	bf00      	nop
 8000588:	40023800 	.word	0x40023800

0800058c <RCC_APB1PeriphClockCmd>:
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
 8000594:	460b      	mov	r3, r1
 8000596:	70fb      	strb	r3, [r7, #3]
 8000598:	78fb      	ldrb	r3, [r7, #3]
 800059a:	2b00      	cmp	r3, #0
 800059c:	d006      	beq.n	80005ac <RCC_APB1PeriphClockCmd+0x20>
 800059e:	490a      	ldr	r1, [pc, #40]	; (80005c8 <RCC_APB1PeriphClockCmd+0x3c>)
 80005a0:	4b09      	ldr	r3, [pc, #36]	; (80005c8 <RCC_APB1PeriphClockCmd+0x3c>)
 80005a2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	4313      	orrs	r3, r2
 80005a8:	640b      	str	r3, [r1, #64]	; 0x40
 80005aa:	e006      	b.n	80005ba <RCC_APB1PeriphClockCmd+0x2e>
 80005ac:	4906      	ldr	r1, [pc, #24]	; (80005c8 <RCC_APB1PeriphClockCmd+0x3c>)
 80005ae:	4b06      	ldr	r3, [pc, #24]	; (80005c8 <RCC_APB1PeriphClockCmd+0x3c>)
 80005b0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	43db      	mvns	r3, r3
 80005b6:	4013      	ands	r3, r2
 80005b8:	640b      	str	r3, [r1, #64]	; 0x40
 80005ba:	bf00      	nop
 80005bc:	370c      	adds	r7, #12
 80005be:	46bd      	mov	sp, r7
 80005c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c4:	4770      	bx	lr
 80005c6:	bf00      	nop
 80005c8:	40023800 	.word	0x40023800

080005cc <TIM_TimeBaseInit>:
 80005cc:	b480      	push	{r7}
 80005ce:	b085      	sub	sp, #20
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	6078      	str	r0, [r7, #4]
 80005d4:	6039      	str	r1, [r7, #0]
 80005d6:	2300      	movs	r3, #0
 80005d8:	81fb      	strh	r3, [r7, #14]
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	881b      	ldrh	r3, [r3, #0]
 80005de:	81fb      	strh	r3, [r7, #14]
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	4a29      	ldr	r2, [pc, #164]	; (8000688 <TIM_TimeBaseInit+0xbc>)
 80005e4:	4293      	cmp	r3, r2
 80005e6:	d013      	beq.n	8000610 <TIM_TimeBaseInit+0x44>
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	4a28      	ldr	r2, [pc, #160]	; (800068c <TIM_TimeBaseInit+0xc0>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d00f      	beq.n	8000610 <TIM_TimeBaseInit+0x44>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80005f6:	d00b      	beq.n	8000610 <TIM_TimeBaseInit+0x44>
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	4a25      	ldr	r2, [pc, #148]	; (8000690 <TIM_TimeBaseInit+0xc4>)
 80005fc:	4293      	cmp	r3, r2
 80005fe:	d007      	beq.n	8000610 <TIM_TimeBaseInit+0x44>
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	4a24      	ldr	r2, [pc, #144]	; (8000694 <TIM_TimeBaseInit+0xc8>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d003      	beq.n	8000610 <TIM_TimeBaseInit+0x44>
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	4a23      	ldr	r2, [pc, #140]	; (8000698 <TIM_TimeBaseInit+0xcc>)
 800060c:	4293      	cmp	r3, r2
 800060e:	d108      	bne.n	8000622 <TIM_TimeBaseInit+0x56>
 8000610:	89fb      	ldrh	r3, [r7, #14]
 8000612:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000616:	81fb      	strh	r3, [r7, #14]
 8000618:	683b      	ldr	r3, [r7, #0]
 800061a:	885a      	ldrh	r2, [r3, #2]
 800061c:	89fb      	ldrh	r3, [r7, #14]
 800061e:	4313      	orrs	r3, r2
 8000620:	81fb      	strh	r3, [r7, #14]
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	4a1d      	ldr	r2, [pc, #116]	; (800069c <TIM_TimeBaseInit+0xd0>)
 8000626:	4293      	cmp	r3, r2
 8000628:	d00c      	beq.n	8000644 <TIM_TimeBaseInit+0x78>
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	4a1c      	ldr	r2, [pc, #112]	; (80006a0 <TIM_TimeBaseInit+0xd4>)
 800062e:	4293      	cmp	r3, r2
 8000630:	d008      	beq.n	8000644 <TIM_TimeBaseInit+0x78>
 8000632:	89fb      	ldrh	r3, [r7, #14]
 8000634:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000638:	81fb      	strh	r3, [r7, #14]
 800063a:	683b      	ldr	r3, [r7, #0]
 800063c:	891a      	ldrh	r2, [r3, #8]
 800063e:	89fb      	ldrh	r3, [r7, #14]
 8000640:	4313      	orrs	r3, r2
 8000642:	81fb      	strh	r3, [r7, #14]
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	89fa      	ldrh	r2, [r7, #14]
 8000648:	801a      	strh	r2, [r3, #0]
 800064a:	683b      	ldr	r3, [r7, #0]
 800064c:	685a      	ldr	r2, [r3, #4]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	62da      	str	r2, [r3, #44]	; 0x2c
 8000652:	683b      	ldr	r3, [r7, #0]
 8000654:	881a      	ldrh	r2, [r3, #0]
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	851a      	strh	r2, [r3, #40]	; 0x28
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	4a0a      	ldr	r2, [pc, #40]	; (8000688 <TIM_TimeBaseInit+0xbc>)
 800065e:	4293      	cmp	r3, r2
 8000660:	d003      	beq.n	800066a <TIM_TimeBaseInit+0x9e>
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	4a09      	ldr	r2, [pc, #36]	; (800068c <TIM_TimeBaseInit+0xc0>)
 8000666:	4293      	cmp	r3, r2
 8000668:	d104      	bne.n	8000674 <TIM_TimeBaseInit+0xa8>
 800066a:	683b      	ldr	r3, [r7, #0]
 800066c:	7a9b      	ldrb	r3, [r3, #10]
 800066e:	b29a      	uxth	r2, r3
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	861a      	strh	r2, [r3, #48]	; 0x30
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	2201      	movs	r2, #1
 8000678:	829a      	strh	r2, [r3, #20]
 800067a:	bf00      	nop
 800067c:	3714      	adds	r7, #20
 800067e:	46bd      	mov	sp, r7
 8000680:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000684:	4770      	bx	lr
 8000686:	bf00      	nop
 8000688:	40010000 	.word	0x40010000
 800068c:	40010400 	.word	0x40010400
 8000690:	40000400 	.word	0x40000400
 8000694:	40000800 	.word	0x40000800
 8000698:	40000c00 	.word	0x40000c00
 800069c:	40001000 	.word	0x40001000
 80006a0:	40001400 	.word	0x40001400

080006a4 <TIM_TimeBaseStructInit>:
 80006a4:	b480      	push	{r7}
 80006a6:	b083      	sub	sp, #12
 80006a8:	af00      	add	r7, sp, #0
 80006aa:	6078      	str	r0, [r7, #4]
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	f04f 32ff 	mov.w	r2, #4294967295
 80006b2:	605a      	str	r2, [r3, #4]
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	2200      	movs	r2, #0
 80006b8:	801a      	strh	r2, [r3, #0]
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	2200      	movs	r2, #0
 80006be:	811a      	strh	r2, [r3, #8]
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	2200      	movs	r2, #0
 80006c4:	805a      	strh	r2, [r3, #2]
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	2200      	movs	r2, #0
 80006ca:	729a      	strb	r2, [r3, #10]
 80006cc:	bf00      	nop
 80006ce:	370c      	adds	r7, #12
 80006d0:	46bd      	mov	sp, r7
 80006d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d6:	4770      	bx	lr

080006d8 <TIM_Cmd>:
 80006d8:	b480      	push	{r7}
 80006da:	b083      	sub	sp, #12
 80006dc:	af00      	add	r7, sp, #0
 80006de:	6078      	str	r0, [r7, #4]
 80006e0:	460b      	mov	r3, r1
 80006e2:	70fb      	strb	r3, [r7, #3]
 80006e4:	78fb      	ldrb	r3, [r7, #3]
 80006e6:	2b00      	cmp	r3, #0
 80006e8:	d008      	beq.n	80006fc <TIM_Cmd+0x24>
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	881b      	ldrh	r3, [r3, #0]
 80006ee:	b29b      	uxth	r3, r3
 80006f0:	f043 0301 	orr.w	r3, r3, #1
 80006f4:	b29a      	uxth	r2, r3
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	801a      	strh	r2, [r3, #0]
 80006fa:	e007      	b.n	800070c <TIM_Cmd+0x34>
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	881b      	ldrh	r3, [r3, #0]
 8000700:	b29b      	uxth	r3, r3
 8000702:	f023 0301 	bic.w	r3, r3, #1
 8000706:	b29a      	uxth	r2, r3
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	801a      	strh	r2, [r3, #0]
 800070c:	bf00      	nop
 800070e:	370c      	adds	r7, #12
 8000710:	46bd      	mov	sp, r7
 8000712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000716:	4770      	bx	lr

08000718 <TIM_ITConfig>:
 8000718:	b480      	push	{r7}
 800071a:	b083      	sub	sp, #12
 800071c:	af00      	add	r7, sp, #0
 800071e:	6078      	str	r0, [r7, #4]
 8000720:	460b      	mov	r3, r1
 8000722:	807b      	strh	r3, [r7, #2]
 8000724:	4613      	mov	r3, r2
 8000726:	707b      	strb	r3, [r7, #1]
 8000728:	787b      	ldrb	r3, [r7, #1]
 800072a:	2b00      	cmp	r3, #0
 800072c:	d008      	beq.n	8000740 <TIM_ITConfig+0x28>
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	899b      	ldrh	r3, [r3, #12]
 8000732:	b29a      	uxth	r2, r3
 8000734:	887b      	ldrh	r3, [r7, #2]
 8000736:	4313      	orrs	r3, r2
 8000738:	b29a      	uxth	r2, r3
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	819a      	strh	r2, [r3, #12]
 800073e:	e009      	b.n	8000754 <TIM_ITConfig+0x3c>
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	899b      	ldrh	r3, [r3, #12]
 8000744:	b29a      	uxth	r2, r3
 8000746:	887b      	ldrh	r3, [r7, #2]
 8000748:	43db      	mvns	r3, r3
 800074a:	b29b      	uxth	r3, r3
 800074c:	4013      	ands	r3, r2
 800074e:	b29a      	uxth	r2, r3
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	819a      	strh	r2, [r3, #12]
 8000754:	bf00      	nop
 8000756:	370c      	adds	r7, #12
 8000758:	46bd      	mov	sp, r7
 800075a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800075e:	4770      	bx	lr

08000760 <TIM_GetITStatus>:
 8000760:	b480      	push	{r7}
 8000762:	b085      	sub	sp, #20
 8000764:	af00      	add	r7, sp, #0
 8000766:	6078      	str	r0, [r7, #4]
 8000768:	460b      	mov	r3, r1
 800076a:	807b      	strh	r3, [r7, #2]
 800076c:	2300      	movs	r3, #0
 800076e:	73fb      	strb	r3, [r7, #15]
 8000770:	2300      	movs	r3, #0
 8000772:	81bb      	strh	r3, [r7, #12]
 8000774:	2300      	movs	r3, #0
 8000776:	817b      	strh	r3, [r7, #10]
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	8a1b      	ldrh	r3, [r3, #16]
 800077c:	b29a      	uxth	r2, r3
 800077e:	887b      	ldrh	r3, [r7, #2]
 8000780:	4013      	ands	r3, r2
 8000782:	81bb      	strh	r3, [r7, #12]
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	899b      	ldrh	r3, [r3, #12]
 8000788:	b29a      	uxth	r2, r3
 800078a:	887b      	ldrh	r3, [r7, #2]
 800078c:	4013      	ands	r3, r2
 800078e:	817b      	strh	r3, [r7, #10]
 8000790:	89bb      	ldrh	r3, [r7, #12]
 8000792:	2b00      	cmp	r3, #0
 8000794:	d005      	beq.n	80007a2 <TIM_GetITStatus+0x42>
 8000796:	897b      	ldrh	r3, [r7, #10]
 8000798:	2b00      	cmp	r3, #0
 800079a:	d002      	beq.n	80007a2 <TIM_GetITStatus+0x42>
 800079c:	2301      	movs	r3, #1
 800079e:	73fb      	strb	r3, [r7, #15]
 80007a0:	e001      	b.n	80007a6 <TIM_GetITStatus+0x46>
 80007a2:	2300      	movs	r3, #0
 80007a4:	73fb      	strb	r3, [r7, #15]
 80007a6:	7bfb      	ldrb	r3, [r7, #15]
 80007a8:	4618      	mov	r0, r3
 80007aa:	3714      	adds	r7, #20
 80007ac:	46bd      	mov	sp, r7
 80007ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b2:	4770      	bx	lr

080007b4 <TIM_ClearITPendingBit>:
 80007b4:	b480      	push	{r7}
 80007b6:	b083      	sub	sp, #12
 80007b8:	af00      	add	r7, sp, #0
 80007ba:	6078      	str	r0, [r7, #4]
 80007bc:	460b      	mov	r3, r1
 80007be:	807b      	strh	r3, [r7, #2]
 80007c0:	887b      	ldrh	r3, [r7, #2]
 80007c2:	43db      	mvns	r3, r3
 80007c4:	b29a      	uxth	r2, r3
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	821a      	strh	r2, [r3, #16]
 80007ca:	bf00      	nop
 80007cc:	370c      	adds	r7, #12
 80007ce:	46bd      	mov	sp, r7
 80007d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007d4:	4770      	bx	lr

080007d6 <GPIO_Init>:
 80007d6:	b480      	push	{r7}
 80007d8:	b087      	sub	sp, #28
 80007da:	af00      	add	r7, sp, #0
 80007dc:	6078      	str	r0, [r7, #4]
 80007de:	6039      	str	r1, [r7, #0]
 80007e0:	2300      	movs	r3, #0
 80007e2:	617b      	str	r3, [r7, #20]
 80007e4:	2300      	movs	r3, #0
 80007e6:	613b      	str	r3, [r7, #16]
 80007e8:	2300      	movs	r3, #0
 80007ea:	60fb      	str	r3, [r7, #12]
 80007ec:	2300      	movs	r3, #0
 80007ee:	617b      	str	r3, [r7, #20]
 80007f0:	e076      	b.n	80008e0 <GPIO_Init+0x10a>
 80007f2:	2201      	movs	r2, #1
 80007f4:	697b      	ldr	r3, [r7, #20]
 80007f6:	fa02 f303 	lsl.w	r3, r2, r3
 80007fa:	613b      	str	r3, [r7, #16]
 80007fc:	683b      	ldr	r3, [r7, #0]
 80007fe:	681a      	ldr	r2, [r3, #0]
 8000800:	693b      	ldr	r3, [r7, #16]
 8000802:	4013      	ands	r3, r2
 8000804:	60fb      	str	r3, [r7, #12]
 8000806:	68fa      	ldr	r2, [r7, #12]
 8000808:	693b      	ldr	r3, [r7, #16]
 800080a:	429a      	cmp	r2, r3
 800080c:	d165      	bne.n	80008da <GPIO_Init+0x104>
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	681a      	ldr	r2, [r3, #0]
 8000812:	697b      	ldr	r3, [r7, #20]
 8000814:	005b      	lsls	r3, r3, #1
 8000816:	2103      	movs	r1, #3
 8000818:	fa01 f303 	lsl.w	r3, r1, r3
 800081c:	43db      	mvns	r3, r3
 800081e:	401a      	ands	r2, r3
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	601a      	str	r2, [r3, #0]
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	681a      	ldr	r2, [r3, #0]
 8000828:	683b      	ldr	r3, [r7, #0]
 800082a:	791b      	ldrb	r3, [r3, #4]
 800082c:	4619      	mov	r1, r3
 800082e:	697b      	ldr	r3, [r7, #20]
 8000830:	005b      	lsls	r3, r3, #1
 8000832:	fa01 f303 	lsl.w	r3, r1, r3
 8000836:	431a      	orrs	r2, r3
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	601a      	str	r2, [r3, #0]
 800083c:	683b      	ldr	r3, [r7, #0]
 800083e:	791b      	ldrb	r3, [r3, #4]
 8000840:	2b01      	cmp	r3, #1
 8000842:	d003      	beq.n	800084c <GPIO_Init+0x76>
 8000844:	683b      	ldr	r3, [r7, #0]
 8000846:	791b      	ldrb	r3, [r3, #4]
 8000848:	2b02      	cmp	r3, #2
 800084a:	d12e      	bne.n	80008aa <GPIO_Init+0xd4>
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	689a      	ldr	r2, [r3, #8]
 8000850:	697b      	ldr	r3, [r7, #20]
 8000852:	005b      	lsls	r3, r3, #1
 8000854:	2103      	movs	r1, #3
 8000856:	fa01 f303 	lsl.w	r3, r1, r3
 800085a:	43db      	mvns	r3, r3
 800085c:	401a      	ands	r2, r3
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	609a      	str	r2, [r3, #8]
 8000862:	687b      	ldr	r3, [r7, #4]
 8000864:	689a      	ldr	r2, [r3, #8]
 8000866:	683b      	ldr	r3, [r7, #0]
 8000868:	795b      	ldrb	r3, [r3, #5]
 800086a:	4619      	mov	r1, r3
 800086c:	697b      	ldr	r3, [r7, #20]
 800086e:	005b      	lsls	r3, r3, #1
 8000870:	fa01 f303 	lsl.w	r3, r1, r3
 8000874:	431a      	orrs	r2, r3
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	609a      	str	r2, [r3, #8]
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	685a      	ldr	r2, [r3, #4]
 800087e:	697b      	ldr	r3, [r7, #20]
 8000880:	b29b      	uxth	r3, r3
 8000882:	4619      	mov	r1, r3
 8000884:	2301      	movs	r3, #1
 8000886:	408b      	lsls	r3, r1
 8000888:	43db      	mvns	r3, r3
 800088a:	401a      	ands	r2, r3
 800088c:	687b      	ldr	r3, [r7, #4]
 800088e:	605a      	str	r2, [r3, #4]
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	685b      	ldr	r3, [r3, #4]
 8000894:	683a      	ldr	r2, [r7, #0]
 8000896:	7992      	ldrb	r2, [r2, #6]
 8000898:	4611      	mov	r1, r2
 800089a:	697a      	ldr	r2, [r7, #20]
 800089c:	b292      	uxth	r2, r2
 800089e:	fa01 f202 	lsl.w	r2, r1, r2
 80008a2:	b292      	uxth	r2, r2
 80008a4:	431a      	orrs	r2, r3
 80008a6:	687b      	ldr	r3, [r7, #4]
 80008a8:	605a      	str	r2, [r3, #4]
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	68da      	ldr	r2, [r3, #12]
 80008ae:	697b      	ldr	r3, [r7, #20]
 80008b0:	b29b      	uxth	r3, r3
 80008b2:	005b      	lsls	r3, r3, #1
 80008b4:	2103      	movs	r1, #3
 80008b6:	fa01 f303 	lsl.w	r3, r1, r3
 80008ba:	43db      	mvns	r3, r3
 80008bc:	401a      	ands	r2, r3
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	60da      	str	r2, [r3, #12]
 80008c2:	687b      	ldr	r3, [r7, #4]
 80008c4:	68da      	ldr	r2, [r3, #12]
 80008c6:	683b      	ldr	r3, [r7, #0]
 80008c8:	79db      	ldrb	r3, [r3, #7]
 80008ca:	4619      	mov	r1, r3
 80008cc:	697b      	ldr	r3, [r7, #20]
 80008ce:	005b      	lsls	r3, r3, #1
 80008d0:	fa01 f303 	lsl.w	r3, r1, r3
 80008d4:	431a      	orrs	r2, r3
 80008d6:	687b      	ldr	r3, [r7, #4]
 80008d8:	60da      	str	r2, [r3, #12]
 80008da:	697b      	ldr	r3, [r7, #20]
 80008dc:	3301      	adds	r3, #1
 80008de:	617b      	str	r3, [r7, #20]
 80008e0:	697b      	ldr	r3, [r7, #20]
 80008e2:	2b0f      	cmp	r3, #15
 80008e4:	d985      	bls.n	80007f2 <GPIO_Init+0x1c>
 80008e6:	bf00      	nop
 80008e8:	371c      	adds	r7, #28
 80008ea:	46bd      	mov	sp, r7
 80008ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008f0:	4770      	bx	lr
	...
